<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>许步鸢的小站</title>
  
  
  <link href="https://www.xubuyuan.top/atom.xml" rel="self"/>
  
  <link href="https://www.xubuyuan.top/"/>
  <updated>2025-02-09T05:04:02.363Z</updated>
  <id>https://www.xubuyuan.top/</id>
  
  <author>
    <name>许步鸢</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://www.xubuyuan.top/2025/02/09/%E7%BD%91%E5%AE%89/"/>
    <id>https://www.xubuyuan.top/2025/02/09/%E7%BD%91%E5%AE%89/</id>
    <published>2025-02-09T05:04:02.299Z</published>
    <updated>2025-02-09T05:04:02.363Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ze入侵"><a href="#ze入侵" class="headerlink" title="ze入侵"></a>ze入侵</h1><p>漏洞复现</p><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">whoami  //查看正在使用的用户，拿到主机名<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20250113204019460.png" alt="image-20250113204019460" loading="lazy"></p><blockquote><p>主机名+用户名</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net user   //主机存在不同用户<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20250113204251097.png" alt="image-20250113204251097" loading="lazy"></p><p>weblogic服务网站</p><p>远程桌面端口：3389</p><p>拿到远程权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net user xz/add    //创建新用户<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20250113205442024.png" alt="image-20250113205442024" loading="lazy"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net localgroup adminstrators  查看管理员组<br>                添加到管理员组<br></code></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20250113205824009.png" alt="image-20250113205824009" loading="lazy"></p><p>成功进入桌面</p><blockquote><p>痕迹清除</p><p>删除登录日志，关闭杀软</p></blockquote><h1 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><h3 id="改中文"><a href="#改中文" class="headerlink" title="改中文"></a>改中文</h3><blockquote><p>打开终端</p><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> dpkg-reconfigure locales<br></code></pre></td></tr></table></figure><p>选择 zh_CN.UTF-8 回车 reboot </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://www.xubuyuan.top/2025/02/09/py/"/>
    <id>https://www.xubuyuan.top/2025/02/09/py/</id>
    <published>2025-02-09T05:03:57.559Z</published>
    <updated>2025-02-09T05:03:57.623Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><input disabled="" type="checkbox"> <h1 id="python-基础知识点"><a href="#python-基础知识点" class="headerlink" title="python 基础知识点"></a>python 基础知识点</h1></li></ul><h3 id="标识符规则"><a href="#标识符规则" class="headerlink" title="标识符规则"></a>标识符规则</h3><p>1字母数字下划线汉字不能开头</p><p>2不能是保留字</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h3 id="input-输入"><a href="#input-输入" class="headerlink" title="input()输入"></a>input()输入</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">a=<span class="hljs-built_in">input</span>()<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a))  //<span class="hljs-keyword">class</span><br><br><span class="hljs-title class_">a</span>=<span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>())  <br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a))  //<span class="hljs-built_in">int</span><br></code></pre></td></tr></table></figure><h3 id="print-输出-打印"><a href="#print-输出-打印" class="headerlink" title="print()输出&#x2F;打印"></a>print()输出&#x2F;打印</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a=1<br>b=2<br>print(a)<br>print(b)  //a<br>        b<br>        <br>a=1<br>b=2<br>print(a,end=&#x27;&#x27;)<br>print(b)    // a b<br></code></pre></td></tr></table></figure><h1 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h1><h3 id="整数int"><a href="#整数int" class="headerlink" title="整数int"></a>整数int</h3><h3 id="浮点数float"><a href="#浮点数float" class="headerlink" title="浮点数float"></a>浮点数float</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a = 1.0<br>b = 2.0<br>c = a+b<br>print(c)<br>&gt;&gt;&gt;0.3<br><br>a = 0.1<br>b = 0.2<br>c = a+b<br>print(c)<br>&gt;&gt;&gt;0.30000000001<br>#浮点数的计算不一定准确可能会产生很小的误差<br></code></pre></td></tr></table></figure><h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">c = <span class="hljs-number">3</span>+<span class="hljs-number">4j</span><br><span class="hljs-built_in">print</span>(c.real)<br><span class="hljs-built_in">print</span>( c.imag)<br>&gt;&gt;&gt;<span class="hljs-number">3.0</span> <span class="hljs-number">4.0</span>    //复数值都为浮点型<br></code></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><blockquote><p>加减乘除 + - * &#x2F;</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a = 4/2<br>print(a)<br>&gt;&gt;&gt;2.0   使用/后会得到浮点数<br></code></pre></td></tr></table></figure><blockquote><p>取整&#x2F;&#x2F;</p><p>取余%</p><p>复合赋值运算+&#x3D;，-&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a += 1 等价于 a = a +1<br>a -= 1 等价于 a = a -1<br></code></pre></td></tr></table></figure><p><strong>相关函数</strong></p><p>abs取绝对值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a = 3 + 4i    复数结果为浮点数类型<br>print(abs(a))  <br>&gt;&gt;&gt;5.0<br></code></pre></td></tr></table></figure><p>round(a,n)浮点数取精度位</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a = 3.1414141<br>print(round(a))    ##精确到整数位<br>&gt;&gt;&gt; 3<br><br>a = 3.1414141<br>print(round(a,3))    ##保留位数<br>&gt;&gt;&gt; 3.141<br></code></pre></td></tr></table></figure><p>max&#x2F;min()求最大&#x2F;小值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">a = ( 43,545,54,46,02)<br>print(max(a))    <br>&gt;&gt;&gt;545<br><br>a = ( 43,545,54,46,02)<br>print(min(a))    <br>&gt;&gt;&gt;2<br></code></pre></td></tr></table></figure></blockquote><h3 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h3><h3 id="字符串S"><a href="#字符串S" class="headerlink" title="字符串S"></a>字符串S</h3><blockquote><p>s &#x3D; “恭喜发财”</p></blockquote><h3 id="元组t"><a href="#元组t" class="headerlink" title="元组t"></a>元组t</h3><blockquote><p>t &#x3D; (‘恭’，‘喜’，‘发’，‘财’)</p></blockquote><h3 id="列表ls"><a href="#列表ls" class="headerlink" title="列表ls"></a>列表ls</h3><blockquote><p>ls &#x3D; [‘恭’，‘喜’，‘发’，‘财’]</p></blockquote><table><thead><tr><th align="center">-4</th><th align="center">-3</th><th align="center">-2</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">恭</td><td align="center">喜</td><td align="center">发</td><td align="center">财</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td></tr></tbody></table><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">print(s[1])<br>print(s[-3])    ##索引<br>&gt;&gt;&gt; 喜<br>  喜<br></code></pre></td></tr></table></figure></blockquote><h4 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h4><blockquote><p>切出一段内容</p><p>[起始位置(<strong>包含</strong>)：终止位置(<strong>不包含</strong>):步长]</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">print(s[1:4])<br>print(t[1:4])<br>print(ls[1:4])<br>&gt;&gt;&gt;<br>喜发财 f<br>(&#x27;喜&#x27;,&#x27;发&#x27;,&#x27;财&#x27;)<br>[&#x27;喜&#x27;,&#x27;发&#x27;,&#x27;财&#x27;]<br></code></pre></td></tr></table></figure><p><strong>步长</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">print(s[0:3:2])<br>&gt;&gt;&gt;恭发<br>print(s[0:3:2])<br></code></pre></td></tr></table></figure></blockquote><h4 id="集合与字典"><a href="#集合与字典" class="headerlink" title="集合与字典"></a>集合与字典</h4><blockquote><p>#<strong>集合</strong><br>s &#x3D; {1,2,3,4,5}</p><p>1.不允许存在重复内容</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">s = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>&#125;<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-meta">&gt;&gt;&gt; </span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>&#125;<br></code></pre></td></tr></table></figure><p>2.添加-<strong>add</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">s = &#123;1,2,3,4,5&#125;<br>s.add(8)<br>print(s)<br>&gt;&gt;&gt;&#123;1,2,3,4,5,8&#125;<br></code></pre></td></tr></table></figure><p>3移除-remov</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">s = &#123;1,2,3,4,5&#125;<br>s.remov(5)<br>print(s)<br>&gt;&gt;&gt;&#123;1,2,3,4&#125;<br></code></pre></td></tr></table></figure><p>4清空-clear</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">s = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>s.clear<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">set</span>&#123;&#125;  特指空集合<br></code></pre></td></tr></table></figure><p>#<strong>字典</strong></p><p>key : value</p><p>d &#x3D; {“名字”:“张三”，”年龄”:23,”分数”:60}</p><figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python">d = &#123;<span class="hljs-string">&quot;名字&quot;</span>:“张三”，<span class="hljs-string">&quot;名字&quot;</span>:“张三”，”年龄<span class="hljs-string">&quot;:23,&quot;</span>分数<span class="hljs-string">&quot;:60&#125;</span><br><span class="hljs-string">print(d)</span><br><span class="hljs-string">&gt;&gt;&gt;&quot;</span>名字<span class="hljs-string">&quot;:“张三”，”年龄&quot;</span>:<span class="hljs-number">23</span>,<span class="hljs-string">&quot;分数&quot;</span>:<span class="hljs-number">60</span><br></code></pre></td></tr></table></figure><p>1.添加键值对</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">d = &#123;&quot;名字&quot;:“张三”，”年龄&quot;:23,&quot;分数&quot;:60&#125;<br>d[&#x27;性别&#x27;] = ‘男’<br></code></pre></td></tr></table></figure><p>2.查找</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#索引<br>print(d[&#x27;分数&#x27;]) <br></code></pre></td></tr></table></figure><p>3.修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">d [&#x27;年龄&#x27;] = 18<br></code></pre></td></tr></table></figure><p>4.删除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">del d[&#x27;名字&#x27;]<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">d.pop(&#x27;名字&#x27;)<br></code></pre></td></tr></table></figure></blockquote><h2 id="分支与循环结构"><a href="#分支与循环结构" class="headerlink" title="分支与循环结构"></a>分支与循环结构</h2><h4 id="运算符-1"><a href="#运算符-1" class="headerlink" title="运算符"></a>运算符</h4><blockquote><p>比较运算符 </p><blockquote><blockquote></blockquote></blockquote><p>l逻辑运算符</p><blockquote><table><thead><tr><th align="center">and</th><th align="center">全真</th></tr></thead><tbody><tr><td align="center">or</td><td align="center">真假</td></tr><tr><td align="center">not</td><td align="center">全假</td></tr></tbody></table></blockquote></blockquote><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="分支结构-1"><a href="#分支结构-1" class="headerlink" title="分支结构"></a>分支结构</h4><blockquote><p><strong>if单分支</strong></p><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">n = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>)<br><span class="hljs-keyword">if</span> n%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;偶数&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>ifelse双分支</strong></p><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">n = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>)<br><span class="hljs-keyword">if</span> n%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;偶数&quot;</span>)<br><span class="hljs-keyword">else</span>：<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;奇数&quot;</span>)<br></code></pre></td></tr></table></figure><p>ifelifelse多分支</p><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">n = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">if</span>  n &gt; <span class="hljs-number">90</span>:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;优秀&quot;</span>)<br><span class="hljs-keyword">elif</span> n &gt; <span class="hljs-number">70</span>:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;良好&quot;</span>)<br><span class="hljs-keyword">elif</span> n &gt; <span class="hljs-number">60</span>:<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;及格&quot;</span>)<br><span class="hljs-keyword">else</span>：<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不合格&quot;</span>)<br></code></pre></td></tr></table></figure></blockquote><h4 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h4><blockquote><p>for遍历循环</p><blockquote><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#循环字符串</span><br>s = <span class="hljs-string">&#x27;恭喜发财&#x27;</span><br><span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-built_in">print</span>(b)<br><span class="hljs-meta">&gt;&gt;&gt; </span>恭<br>  喜<br>  发<br>  财<br></code></pre></td></tr></table></figure><p>#range函数(左边包括，右边不包括)</p><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#数字循环</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>  <span class="hljs-built_in">print</span>(i)<br>&gt;&gt;&gt;  <span class="hljs-number">1</span><br>  <span class="hljs-number">2</span><br>    <span class="hljs-number">3</span><br>    <span class="hljs-number">4</span><br>    <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure></blockquote><p>while条件循环</p><blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">n = 1<br>while n &lt; 5:<br>    n+=1<br>    print(n)  #注意条件变量，不要写死循环<br></code></pre></td></tr></table></figure></blockquote></blockquote><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><blockquote><h5 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h5><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span> (x,y=<span class="hljs-number">3</span>):  <span class="hljs-comment">#默认参数，必须在后面</span><br>  s = x + y<br>  <span class="hljs-built_in">print</span>(S)<br></code></pre></td></tr></table></figure><h5 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h5><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">add(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>)  <span class="hljs-comment">#位置参数</span><br>add(x = <span class="hljs-number">3</span>,y = <span class="hljs-number">5</span>)  <span class="hljs-comment">#关键字参数</span><br>&gt;&gt;&gt;<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h5 id="return"><a href="#return" class="headerlink" title="return"></a>return</h5><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">返回函数<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span> (x,y):<br>  s = x + y<br>  <span class="hljs-keyword">return</span> s<br>  <br>n = add (<span class="hljs-number">3</span>,<span class="hljs-number">7</span>)<br><span class="hljs-built_in">print</span>(n)<br></code></pre></td></tr></table></figure><h5 id="global"><a href="#global" class="headerlink" title="global"></a>global</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">s = 0  <br>def add (x,y):<br>  globla s局部变量&gt;全局变量<br>  s = x + y<br>  print(S)<br>add(3,7)<br>print(s)<br></code></pre></td></tr></table></figure></blockquote><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><blockquote><h5 id="open-函数"><a href="#open-函数" class="headerlink" title="open  函数"></a>open  函数</h5><h5 id="指定编码参数"><a href="#指定编码参数" class="headerlink" title="指定编码参数"></a>指定编码参数</h5><blockquote><h5 id="enconding-‘uef-8’"><a href="#enconding-‘uef-8’" class="headerlink" title="enconding &#x3D; ‘uef-8’"></a>enconding &#x3D; ‘uef-8’</h5></blockquote><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;文件名&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)<br></code></pre></td></tr></table></figure><h6 id="read-读取"><a href="#read-读取" class="headerlink" title="read()读取"></a>read()读取</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">print(f.read)    全部读取<br>print(f.readlines)  按行读取<br></code></pre></td></tr></table></figure><p><strong>写入</strong></p><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;文件名&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)    <br><span class="hljs-built_in">print</span>(f.write(<span class="hljs-string">&quot;恭喜发财&quot;</span>))  <span class="hljs-comment">#覆盖写入文件文件，并非追加</span><br>f.close()  <span class="hljs-comment">#关闭文件</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h2><h3 id="tuetlr库"><a href="#tuetlr库" class="headerlink" title="tuetlr库"></a>tuetlr库</h3><blockquote><h4 id="导入方式"><a href="#导入方式" class="headerlink" title="导入方式"></a>导入方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle<br>turtle.fd(200)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle as t<br>t.fd(200)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle import *<br>fd(200)<br></code></pre></td></tr></table></figure><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><blockquote><h5 id="前进"><a href="#前进" class="headerlink" title="前进"></a>前进</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle<br>turtle.fd(200)<br></code></pre></td></tr></table></figure><h5 id="后退"><a href="#后退" class="headerlink" title="后退"></a>后退</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle<br>turtle.fd(—200)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">left()  #左旋转<br>right()  #右旋转<br>Seth()  #朝向<br></code></pre></td></tr></table></figure></blockquote><h5 id="pensize-设置画笔粗细"><a href="#pensize-设置画笔粗细" class="headerlink" title="pensize() #设置画笔粗细"></a>pensize() #设置画笔粗细</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">pensize(10)    <br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">import turtle<br>#设置填充色<br>turtle.color(&#x27;bule&#x27;,&#x27;red&#x27;)<br>#三角形<br>turtle.begin_fill()<br>for i in range (3):<br>  turtle.fd(200)<br>  turtle.left(120)<br>turtle.end_fill()  #结束填充色<br></code></pre></td></tr></table></figure><h5 id="goto-移动到"><a href="#goto-移动到" class="headerlink" title="goto#移动到"></a>goto#移动到</h5><figure class="highlight py"><table><tr><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> turtle<br>turtle,fd(<span class="hljs-number">100</span>)<br>turtle.goto(<span class="hljs-number">192</span>,<span class="hljs-number">242</span>)<br><br></code></pre></td></tr></table></figure></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>工坊晚自习</title>
    <link href="https://www.xubuyuan.top/2024/12/15/%E5%B7%A5%E5%9D%8A%E6%99%9A%E8%87%AA%E4%B9%A0/"/>
    <id>https://www.xubuyuan.top/2024/12/15/%E5%B7%A5%E5%9D%8A%E6%99%9A%E8%87%AA%E4%B9%A0/</id>
    <published>2024-12-15T10:17:21.000Z</published>
    <updated>2024-12-15T11:10:45.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="带你成为Linux高手"><a href="#带你成为Linux高手" class="headerlink" title="带你成为Linux高手"></a>带你成为Linux高手</h1><p>[linux发行版路线图]</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/8581944c0009333bd392108a3c926916.png" loading="lazy"></p><p>Linux服务器因其稳定性、安全性和灵活性而被广泛使用。以下是Linux服务器可以执行的一些常见任务：</p><ol><li><strong>网站托管</strong>：<ul><li>运行Web服务器软件（如Apache、Nginx）来托管网站和Web应用程序。</li><li>提供SSL&#x2F;TLS加密以保护数据传输。</li></ul></li><li><strong>文件存储和共享</strong>：<ul><li>作为文件服务器，使用Samba、NFS等协议共享文件和打印机。</li><li>提供云存储解决方案，如ownCloud或Nextcloud。</li></ul></li><li><strong>数据库服务</strong>：<ul><li>运行数据库管理系统（如MySQL、PostgreSQL、MariaDB）来存储和管理数据。</li></ul></li><li><strong>邮件服务</strong>：<ul><li>作为邮件服务器，使用Sendmail、Postfix等软件处理电子邮件的发送和接收。</li></ul></li><li><strong>虚拟化</strong>：<ul><li>使用KVM、Xen或VMware等技术提供虚拟机服务。</li></ul></li><li><strong>网络安全</strong>：<ul><li>作为防火墙，使用iptables、firewalld等工具保护网络。</li><li>作为VPN服务器，使用OpenVPN等软件提供安全的远程访问。</li></ul></li><li><strong>开发和测试环境</strong>：<ul><li>提供开发、构建和测试应用程序的环境。</li></ul></li><li><strong>云计算平台</strong>：<ul><li>作为私有云或公共云平台的一部分，使用OpenStack等技术。</li></ul></li><li><strong>大数据和分析</strong>：<ul><li>运行Hadoop、Spark等大数据处理框架。</li></ul></li><li><strong>容器化服务</strong>：<ul><li>使用Docker和Kubernetes等技术管理容器化应用程序。</li></ul></li><li><strong>自动化和持续集成&#x2F;持续部署（CI&#x2F;CD）</strong>：<ul><li>运行Jenkins、GitLab CI等工具自动化软件构建和部署流程。</li></ul></li><li><strong>监控和日志管理</strong>：<ul><li>使用Nagios、Zabbix等监控工具监控服务器性能和健康状态。</li><li>使用ELK（Elasticsearch、Logstash、Kibana）堆栈等工具管理日志。</li></ul></li><li><strong>多媒体服务</strong>：<ul><li>作为媒体服务器，使用Plex等软件流式传输音乐、视频和照片。</li></ul></li><li><strong>游戏服务器</strong>：<ul><li>运行Minecraft、Team Fortress 2等游戏的服务器。</li></ul></li><li><strong>科学计算和高性能计算（HPC）</strong>：<ul><li>用于科学研究和复杂的数值计算。</li></ul></li></ol><p>Linux服务器的多功能性使其成为企业、组织和个人用户的理想选择，能够满足各种不同的需求。</p><p>创建一台自己的linux主机</p><p>安装</p><p>基本配置</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="常用" scheme="https://www.xubuyuan.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    
    <category term="工坊" scheme="https://www.xubuyuan.top/tags/%E5%B7%A5%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>网安学习路线</title>
    <link href="https://www.xubuyuan.top/2024/12/14/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>https://www.xubuyuan.top/2024/12/14/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</id>
    <published>2024-12-14T11:39:37.000Z</published>
    <updated>2024-12-14T11:40:30.591Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、基础阶段"><a href="#一、基础阶段" class="headerlink" title="一、基础阶段"></a>一、基础阶段</h1><p>中华人民共和国网络安全法<br>Linux操作系统<br>计算机网络<br>SHELL<br>HTML&#x2F;CSS<br>JavaScript<br>PHP入门<br>MySQL数据库<br>Python </p><h1 id="二、渗透阶段"><a href="#二、渗透阶段" class="headerlink" title="二、渗透阶段"></a>二、渗透阶段</h1><p>SQL注入的渗透与防御<br>XSS相关渗透与防御<br>上传验证渗透与防御<br>文件包含渗透与防御<br>CSRF渗透与防御<br>SSRF渗透与防御<br>XXE渗透与防御<br>远程代码执行渗透与防御</p><h1 id="三、安全管理（提升）"><a href="#三、安全管理（提升）" class="headerlink" title="三、安全管理（提升）"></a>三、安全管理（提升）</h1><p>渗透报告编写<br>等级保护2.0<br>应急响应<br>代码审计<br>风险评估<br>安全巡检<br>数据安全</p><h4 id="四、提升阶段（提升）"><a href="#四、提升阶段（提升）" class="headerlink" title="四、提升阶段（提升）"></a>四、提升阶段（提升）</h4><p>密码学<br>JavaSE入门<br>C语言<br>C++语言<br>Windows逆向<br>CTF夺旗赛<br>Android逆向</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网安" scheme="https://www.xubuyuan.top/categories/%E7%BD%91%E5%AE%89/"/>
    
    
    <category term="网安" scheme="https://www.xubuyuan.top/tags/%E7%BD%91%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>网安笔记</title>
    <link href="https://www.xubuyuan.top/2024/12/14/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.xubuyuan.top/2024/12/14/%E7%BD%91%E5%AE%89%E7%AC%94%E8%AE%B0/</id>
    <published>2024-12-14T11:37:34.000Z</published>
    <updated>2024-12-29T05:59:33.736Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我将分享我在PC领d域遇到的一些关键知识点，并将它们系统化整理</p><h1 id="osi七层网络参考模型"><a href="#osi七层网络参考模型" class="headerlink" title="osi七层网络参考模型"></a>osi七层网络参考模型</h1><p>OSI模型，全称为开放式系统互联参考模型（Open System Interconnection Reference Model），是由国际标准化组织（ISO）在20世纪80年代初提出的一个网络通信模型。这个模型的目的是为了标准化网络通信的过程，使得不同厂商的设备能够互联互通。</p><p>OSI模型将网络通信划分为七个层次，每一层都有其特定的功能和协议。这七个层次从底到顶依次是：</p><ol><li><strong>物理层（Physical Layer）</strong>：负责在物理媒介上传输原始的比特流，包括定义电气、机械、过程和功能标准，如电压、物理数据速率、最大传输距离等。</li><li><strong>数据链路层（Data Link Layer）</strong>：确保物理层传输的数据无误，进行帧同步、差错控制和流量控制，将网络层的逻辑传输单元封装成帧。</li><li><strong>网络层（Network Layer）</strong>：负责数据包从源到宿的传输和路由选择，处理数据包在整个网络中的移动。</li><li><strong>传输层（Transport Layer）</strong>：提供端到端的数据传输服务，确保数据的完整性和可靠性，常见的协议有TCP和UDP。</li><li><strong>会话层（Session Layer）</strong>：管理和控制两个通信系统之间的会话连接，负责建立、维护和终止会话。</li><li><strong>表示层（Presentation Layer）</strong>：处理数据的表示、编码和转换，确保一个系统的应用层所发送的信息可以被另一个系统的应用层读取。</li><li><strong>应用层（Application Layer）</strong>：为应用软件提供网络服务，如文件传输、电子邮件和远程登录等。</li></ol><p>每一层都向其上层提供服务，并且依赖于其下层所提供的服务。OSI模型的成功之处在于它清晰地区分了服务、接口和协议这三个容易混淆的概念，使得功能定义与实现细节区分开来，具有很高的概括性和适应能力</p><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><p>端口（Port）在计算机网络中是一个重要的概念，用于区分不同的服务或进程。每个运行在计算机上的进程都可以通过一个端口来与其他计算机上的进程进行通信。端口号是一个16位的数字，其取值范围从0到65535。</p><p>端口可以分为以下几类：</p><ol><li><strong>知名端口（Well-Known Ports）</strong>：<ul><li>范围：0-1023</li><li>这些端口号被分配给常用的或者标准的服务和应用程序。例如，HTTP服务通常使用端口80，HTTPS使用443，FTP使用21。</li></ul></li><li><strong>注册端口（Registered Ports）</strong>：<ul><li>范围：1024-49151</li><li>这些端口号用于用户或公司的应用程序。它们不像知名端口那样固定，但通常被注册以避免冲突。</li></ul></li><li><strong>动态或私有端口（Dynamic or Private Ports）</strong>：<ul><li>范围：49152-65535</li><li>这些端口号通常不固定分配给任何服务，可以由任何用户用于任何目的。它们经常用于临时的通信会话。</li></ul></li></ol><p>端口在网络通信中的作用包括：</p><ul><li><strong>区分服务</strong>：不同的网络服务监听不同的端口，例如，Web服务器通常监听80端口，而邮件服务器可能监听25端口（SMTP）。</li><li><strong>端到端通信</strong>：在客户端和服务器之间的通信中，端口用于标识特定的进程或服务，确保数据能够正确地送达目的地。</li><li><strong>安全性</strong>：通过开放或关闭特定的端口，可以增加或减少网络的攻击面。例如，关闭不必要的服务端口可以提高系统的安全性。</li><li><strong>端口转发和映射</strong>：在家庭或企业网络中，端口转发可以将外部请求从一个端口转发到内部网络的另一个端口，使得内部服务能够被外部访问。</li></ul><h2 id="常用端口号"><a href="#常用端口号" class="headerlink" title="常用端口号"></a>常用端口号</h2><blockquote><ol><li>**HTTP (Hypertext Transfer Protocol)**：80端口，用于普通的Web页面传输。</li><li>**HTTPS (HTTP Secure)**：443端口，用于加密的Web页面传输。</li><li>**FTP (File Transfer Protocol)**：21端口，用于文件传输。</li><li>**SSH (Secure Shell)**：22端口，用于安全远程登录和文件传输。</li><li><strong>Telnet</strong>：23端口，用于远程登录，但由于不安全，已逐渐被SSH取代。</li><li>**SMTP (Simple Mail Transfer Protocol)**：25端口，用于发送电子邮件。</li><li>**DNS (Domain Name System)**：53端口，用于域名解析。</li><li>**DHCP (Dynamic Host Configuration Protocol)**：67和68端口，用于自动分配IP地址。</li><li>**POP3 (Post Office Protocol 3)**：110端口，用于接收电子邮件。</li><li>**IMAP (Internet Message Access Protocol)**：143端口，用于访问和管理电子邮件。</li><li>**SNMP (Simple Network Management Protocol)**：161和162端口，用于网络管理。</li><li>**LDAP (Lightweight Directory Access Protocol)**：389端口，用于访问和维护分布式目录信息服务。</li><li><strong>HTTPS over SSL&#x2F;TLS</strong>：443端口，用于加密的Web页面传输。</li><li>**RDP (Remote Desktop Protocol)**：3389端口，用于远程桌面连接。</li><li>**SIP (Session Initiation Protocol)**：5060和5061端口，用于语音和视频通信。</li><li><strong>MySQL</strong>：3306端口，用于MySQL数据库服务。</li><li><strong>PostgreSQL</strong>：5432端口，用于PostgreSQL数据库服务。</li><li><strong>Microsoft SQL Server</strong>：1433端口，用于SQL Server数据库服务。</li><li><strong>Oracle SQL*Net</strong>：1521端口，用于Oracle数据库服务。</li><li>**NFS (Network File System)**：2049端口，用于文件共享。</li></ol></blockquote><h2 id="tcp-udp"><a href="#tcp-udp" class="headerlink" title="tcp&#x2F;udp"></a>tcp&#x2F;udp</h2><p>二者都工作在<strong>传输层</strong> 在程序之间传输数据</p><h6 id="TCP（传输控制协议）"><a href="#TCP（传输控制协议）" class="headerlink" title="TCP（传输控制协议）"></a><strong>TCP</strong>（传输控制协议）</h6><blockquote><p>是互联网上最常用的协议之一，广泛应用于TCP&#x2F;IP网络中。TCP协议通过建立连接并在两台设备之间传输数据流，确保数据包的可靠传输和顺序接收。与UDP相比，TCP的最大特点是它能够保证通信的可靠性，确保数据不会丢失或乱序。</p></blockquote><h5 id="UDP（用户数据报协议）"><a href="#UDP（用户数据报协议）" class="headerlink" title="UDP（用户数据报协议）"></a><strong>UDP</strong>（用户数据报协议）</h5><blockquote><p>与TCP一样，通常与IP协议一起使用，用于在计算机之间传输数据报。与TCP不同，UDP是无连接的，无法保证数据的可靠性。在数据传输过程中，如果出现错误或丢包，接收方应用程序需要自行处理。由于UDP的传输速度更快，且适用于对实时性要求较高的应用，比如音视频流或在线游戏等，因此在这些场景中常常优先选择UDP协议，即便它可能会丢失一些数据包。</p><p>​</p></blockquote><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241214192948834.png" loading="lazy"></p><p>​如图所示（笑）</p><h3 id="TCP连接的建立过程（三次握手）："><a href="#TCP连接的建立过程（三次握手）：" class="headerlink" title="TCP连接的建立过程（三次握手）："></a>TCP连接的建立过程（三次握手）：</h3><ul><li><blockquote><p><strong>SYN（同步序列编号）</strong>：</p><ul><li>客户端发送一个带有SYN标志的TCP段到服务器，请求建立连接，并指定客户端的初始序列号。</li></ul><p><strong>SYN-ACK（同步-确认）</strong>：</p><ul><li>服务器收到SYN请求后，如果同意建立连接，则发送一个SYN-ACK段作为响应，包含服务器的初始序列号和对客户端SYN的确认。</li></ul><p><strong>ACK（确认）</strong>：</p><ul><li>客户端收到服务器的SYN-ACK响应后，发送一个带有ACK标志的TCP段作为最后的确认，确认收到了服务器的SYN-ACK。</li></ul></blockquote></li></ul><p>完成这三次握手后，TCP连接就成功建立了，数据可以开始在两端之间传输。这个过程确保了双方都准备好进行数据传输，并且能够跟踪和确认数据包的发送和接收。</p><h3 id="TCP连接的终止（四次挥手）："><a href="#TCP连接的终止（四次挥手）：" class="headerlink" title="TCP连接的终止（四次挥手）："></a>TCP连接的终止（四次挥手）：</h3><ul><li><blockquote><p><strong>FIN（结束）</strong>：</p><ul><li>当一方完成数据发送后，发送一个FIN段来关闭连接。</li></ul><p><strong>ACK（确认）</strong>：</p><ul><li>接收方确认FIN，并发送一个ACK段。</li></ul><p><strong>FIN（结束）</strong>：</p><ul><li>接收方在发送完所有剩余数据后，也发送一个FIN段。</li></ul><p><strong>ACK（确认）</strong>：</p><ul><li>最初发送FIN的一方确认接收方的FIN，并发送最后一个ACK段。</li></ul></blockquote></li></ul><p>完成这四次挥手后，TCP连接被关闭。这个过程确保了双方都有机会发送完所有剩余的数据，并确认连接即将关闭。</p><h1 id="HTPP协议简介"><a href="#HTPP协议简介" class="headerlink" title="HTPP协议简介"></a>HTPP协议简介</h1><p>超文本传输协议</p><p>应用层</p><p>TCP&#x2F;IP</p><p>发布和接受HTML</p><h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><p>TCP三次握手</p><p>tcp建立连接成功后，向服务器发送http请求</p><p>服务器收到http请求后，向客户机发送http响应</p><p>客户端通过TCP四次挥手，与服务器断开TCP连接</p><h3 id="B-S-C-S"><a href="#B-S-C-S" class="headerlink" title="B&#x2F;S&amp;C&#x2F;S"></a>B&#x2F;S&amp;C&#x2F;S</h3><p>C&#x2F;S Client&#x2F;Server 客户机和服务器结构</p><p>B&#x2F;S  Browser&#x2F;Server  浏览器和服务器结构</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网安" scheme="https://www.xubuyuan.top/categories/%E7%BD%91%E5%AE%89/"/>
    
    
    <category term="网安" scheme="https://www.xubuyuan.top/tags/%E7%BD%91%E5%AE%89/"/>
    
  </entry>
  
  <entry>
    <title>OpenEuler</title>
    <link href="https://www.xubuyuan.top/2024/12/12/OpenEuler/"/>
    <id>https://www.xubuyuan.top/2024/12/12/OpenEuler/</id>
    <published>2024-12-12T14:04:48.000Z</published>
    <updated>2024-12-14T11:42:32.697Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593704.gif" loading="lazy"></p><span id="more"></span><h1 id="网络YUM源配置"><a href="#网络YUM源配置" class="headerlink" title="网络YUM源配置"></a>网络YUM源配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">确定操作系统版本<br><br>cat /etc/os-release<br></code></pre></td></tr></table></figure><h2 id="选择yum源版本-配置yum源文件"><a href="#选择yum源版本-配置yum源文件" class="headerlink" title="选择yum源版本 配置yum源文件"></a>选择yum源版本 配置yum源文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd /etc/yum.repos.d/<br>mv openEuler.repo openEuler.repo.bak  *备份原有的配置文件*<br>vi openEuler.repo  *创建或编辑新的配置文件*<br></code></pre></td></tr></table></figure><h2 id="编辑yum源"><a href="#编辑yum源" class="headerlink" title="编辑yum源"></a>编辑yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[openEuler-everything]<br>name=openEuler-everything<br>baseurl=http://repo.huaweicloud.com/openeuler/openEuler-22.03-LTS-SP3/everything/x86_64/<br>enabled=1<br>gpgcheck=0<br>gpgkey=http://repo.huaweicloud.com/openeuler/openEuler-22.03-LTS-SP3/everything/x86_64/RPM-GPG-KEY-openEuler<br></code></pre></td></tr></table></figure><h1 id="本地YUM源配置"><a href="#本地YUM源配置" class="headerlink" title="本地YUM源配置"></a>本地YUM源配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">懒的写<br></code></pre></td></tr></table></figure><h1 id="SELinux与防火墙配置"><a href="#SELinux与防火墙配置" class="headerlink" title="SELinux与防火墙配置"></a>SELinux与防火墙配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">查看SElinnux状态<br>getenforce<br>临时更改SELinux模式<br>setenforce 0<br>semanage 安装（用于管理和配置SELinux策略）<br>yum install policycoreutils-python-utils<br>查看所有开放端口<br>semanage port -l<br>查看特定端口是否开放（例如查看端口5000）<br>semanage port -l | grep 5000<br>查看针对特定服务（如http）开放的端口<br>semanage port -l | grep http_port_t<br>添加端口（例如开放5002端口给http服务）<br>semanage port -a -t http_port_t -p tcp 5502<br>删除端口（例如关闭http服务的5002端口）<br>semanage port -a -t http_port_t -p tcp 5502<br>防火墙配置<br>启动/停止 防火墙服务<br>systemctl start/stop firewalld<br>查看防火墙服务状态<br>systemctl status firewalld <br>启用/禁用防火墙服务开机自启<br>systemctl enable/disable firewalld<br>添加/删除端口到防火墙规则<br>firewall-cmd --permanent --add/remove-port=80/tcp<br>重新加载防火墙规则<br>firewall-cmd --reload<br>查看当前防火墙规则 <br>firewall-cmd --list-all<br>允许/阻止特定服务通过防火墙 <br>firewall-cmd --permanent --add/remove-service=http<br>查看防火墙日志 <br>journalctl -u firewalld<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593704.gif&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="OpenEuler" scheme="https://www.xubuyuan.top/categories/OpenEuler/"/>
    
    
    <category term="openeuler" scheme="https://www.xubuyuan.top/tags/openeuler/"/>
    
  </entry>
  
  <entry>
    <title>2024秋题库</title>
    <link href="https://www.xubuyuan.top/2024/12/12/%E4%BC%A0%E6%84%9F%E7%BD%91%E9%A2%98%E5%BA%93/"/>
    <id>https://www.xubuyuan.top/2024/12/12/%E4%BC%A0%E6%84%9F%E7%BD%91%E9%A2%98%E5%BA%93/</id>
    <published>2024-12-12T00:48:34.000Z</published>
    <updated>2024-12-29T05:54:21.172Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593718.gif" loading="lazy"></p> <span id="more"></span><h2 id="工业互联网络技术"><a href="#工业互联网络技术" class="headerlink" title="工业互联网络技术"></a>工业互联网络技术</h2><h4 id="什么是ACL"><a href="#什么是ACL" class="headerlink" title="什么是ACL"></a>什么是ACL</h4><blockquote><p>ACl是在交换机和路由器上经常采用的一种流量交换技术，它通过制定一定的规则对经过的网络设备的数据包经行过滤，以实现允许或者拒绝特定的数据包进出网络，实现对网络的访问进行控制</p></blockquote><h4 id="H3C具有哪些视图"><a href="#H3C具有哪些视图" class="headerlink" title="H3C具有哪些视图"></a>H3C具有哪些视图</h4><blockquote><p>用户视图 </p><p>配置视图 </p><p>接口视图 </p><p>路由协议视图 </p><p>用户界面视图</p></blockquote><h4 id="什么是vlan"><a href="#什么是vlan" class="headerlink" title="什么是vlan"></a>什么是vlan</h4><blockquote><p>vlan是虚拟局域网的简称，它利用交换机在一个物理网络上划分多个逻辑网络的技术。根据功能，部门划分多个多个逻辑工作组，形成不同的虚拟网络。</p></blockquote><h4 id="简述路由器的路由表查找规则"><a href="#简述路由器的路由表查找规则" class="headerlink" title="简述路由器的路由表查找规则"></a>简述路由器的路由表查找规则</h4><blockquote><p>最长匹配原则;当数据包到达路由时，路由会根据数据包的目的地址与路由表进行匹配，最后选择一条匹配最长的路由进行数据转发<br>下一条地址原则：当路由 查找到匹配的目的地址的路由路由条目时，判断下一跳地址是否直连，如果直连则直接转发，则以下一跳地址为目的地址继续匹配路由，直到匹配路由，然后转发<br>默认路由原则：当路由器收到一个数据包，当目的地址与自己所有路由条目都没有匹配上，此时如果存在默认路由，则通过默认路由转发，如果不存在默认路由，则直接丢弃该数据包</p></blockquote><h4 id="简述IP地址动态获取过程"><a href="#简述IP地址动态获取过程" class="headerlink" title="简述IP地址动态获取过程"></a>简述IP地址动态获取过程</h4><blockquote><p>DHCP客户端请求ip dhcp客户端以广播的方式发出DHCP discover报文</p><p>DHCP 服务器响应 DHCP服务器向DHCP客户端发送一个DHCP offer报文</p><p>DHCP客户端选择IP  DHCP客户端会发出一个广播DHCP request报文，在选项字段中会加入选中的DHCP服务器的IP地址和需要的IP地址</p><p>DHCP服务端确认租约 DHCP服务器向DHCP客户端响应一个DHCP ACK报文，并在选项字段中增加IP地址的使用租期信息</p></blockquote><h4 id="简述RIP的缺陷"><a href="#简述RIP的缺陷" class="headerlink" title="简述RIP的缺陷"></a>简述RIP的缺陷</h4><blockquote><p>以跳数评估路由并非最佳路径<br>rip路由协议会引发环路<br>更新发送全部路由表 浪费网路资源<br>收集信息慢<br>发布信息以及认证方式-协议的安全性<br>最大跳数16导致网络尺度小</p></blockquote><h4 id="什么是链路聚合"><a href="#什么是链路聚合" class="headerlink" title="什么是链路聚合"></a>什么是链路聚合</h4><blockquote><p>链路聚合是将多个物理以太网口聚合在一起形成一个逻辑上的聚合组，使用链路聚合服务的上层实体把同一聚合组的多条物理链路视为一条逻辑链路</p></blockquote><h4 id="简述STP工作过程"><a href="#简述STP工作过程" class="headerlink" title="简述STP工作过程"></a>简述STP工作过程</h4><blockquote><p>选举一个根网桥<br>在每一个非根网桥上选举一个根端口<br>在每一个网段上 选举一个指定端口<br>阻塞非根，非指定端口</p></blockquote><h4 id="简述STP作用"><a href="#简述STP作用" class="headerlink" title="简述STP作用"></a>简述STP作用</h4><blockquote><p>通过阻断冗余链路来消除桥接网络中可能存在的路径回环<br>当路径发生故障时，激活冗余备份链路，恢复网络连通性</p></blockquote><h4 id="简述路由器的作用"><a href="#简述路由器的作用" class="headerlink" title="简述路由器的作用"></a>简述路由器的作用</h4><blockquote><p>连接具有不同介质的链路</p><p>连接网络或子网，隔离广播</p><p>对数据报文执行寻路和转发</p><p>交换和维护路由信息</p></blockquote><h4 id="简述NAT分类特点"><a href="#简述NAT分类特点" class="headerlink" title="简述NAT分类特点"></a>简述NAT分类特点</h4><blockquote><p>basic nat</p><p>私网与公网IP一对一映射，仅能实现内网与公网通信不能实现节约IP地址的作用，现实中基本不会使用</p><p>NAPT</p><p>私网IP+端口号与公网IP+端口号多对一映射，不仅实现了内网与公网通信，并且节约了IP地址。在现实中广泛使用于企业校园网</p><p>Easy IP</p><p>私网IP+端口号与出口IP+端口号的多对一映射 。特点同上，广泛用于家庭网络。</p></blockquote><h4 id="简述动态路由协议的工作原理"><a href="#简述动态路由协议的工作原理" class="headerlink" title="简述动态路由协议的工作原理"></a>简述动态路由协议的工作原理</h4><blockquote><p>网络中所有路由都开启相同的路由协议</p><p>邻居发现：路由器通过发送广播报文或发送给指定的路由器邻居以主动地把自己介绍给网段内的其他路由器</p><p>路由交换：每台路由器将自己路由相关的信息发送给相邻路由器</p><p>路由计算；每台路由运行某种算法，计算出最终的路由来</p><p>路由维护：路由器之间通过周期性的发送 协议报文来维护邻居信息</p></blockquote><h4 id="简述静态路由的优缺点"><a href="#简述静态路由的优缺点" class="headerlink" title="简述静态路由的优缺点"></a>简述静态路由的优缺点</h4><blockquote><p>优点</p><p>网络管理员3手工配置，无开销</p><p>网络安全保密性好</p><p>缺点</p><p>网络拓扑变化时需管理员重新手工配置路由</p><p>网络规模过大时管理员工作量大</p></blockquote><h4 id="简述DHCP的特点"><a href="#简述DHCP的特点" class="headerlink" title="简述DHCP的特点"></a>简述DHCP的特点</h4><blockquote><p>即插即用性：客户端无需配置即能获得IP地址及其参数。建华客户端网络配置，降低维护成本</p><p>统一管理：所有IP地址及其相关参数信息由DHCP服务器统一管理，统一分配</p><p>可跨网段实现：通过使用DHCP中继，可使处于不同子网中的客户端和DHCP服务器之间实现协议报文交互</p></blockquote><h4 id="在显示网络中，DHCP服务器需要为DHCP客户端分配哪些参数？"><a href="#在显示网络中，DHCP服务器需要为DHCP客户端分配哪些参数？" class="headerlink" title="在显示网络中，DHCP服务器需要为DHCP客户端分配哪些参数？"></a>在显示网络中，DHCP服务器需要为DHCP客户端分配哪些参数？</h4><blockquote><p>IP地址</p><p>子网掩码</p><p>默认网关</p><p>DNS服务器地址</p></blockquote><h4 id="衡量路由协议的主要指标"><a href="#衡量路由协议的主要指标" class="headerlink" title="衡量路由协议的主要指标"></a>衡量路由协议的主要指标</h4><blockquote><p>协议计算的正确性</p><p>协议使用算法能否正确算出最优路由，且正确无环</p><p>路由收敛速度</p><p>当网络拓扑发生变化时，能迅速感知并及时更新响应的路由信息</p><p>协议占用系统开销</p><p>协议自身的开销小</p><p>协议自身安全性</p><p>协议自身不易受攻击，有安全机制</p><p>协议适用网络规模</p><p>协议可以应用在任何拓扑结构和规模的网络中</p></blockquote><h4 id="在运行了RIP的MSR路由器上看到如下信息"><a href="#在运行了RIP的MSR路由器上看到如下信息" class="headerlink" title="在运行了RIP的MSR路由器上看到如下信息"></a>在运行了RIP的MSR路由器上看到如下信息</h4><blockquote><p>目的网络 ：6.6.6.0&#x2F;24</p><p>路由协议：RIP</p><p>路由优先级：100</p><p>路由花销值：1</p><p>下一跳地址：100.1.1.1</p><p>出接口：g0&#x2F;0</p></blockquote><h2 id="Open-Euler"><a href="#Open-Euler" class="headerlink" title="Open Euler"></a>Open Euler</h2><h4 id="假设一个设备的文件名为dev-sdb，可以确认它是主板上第二个插槽上的设备吗？"><a href="#假设一个设备的文件名为dev-sdb，可以确认它是主板上第二个插槽上的设备吗？" class="headerlink" title="假设一个设备的文件名为dev&#x2F;sdb，可以确认它是主板上第二个插槽上的设备吗？"></a>假设一个设备的文件名为dev&#x2F;sdb，可以确认它是主板上第二个插槽上的设备吗？</h4><blockquote><p>不一定，因为设备文件名是由系统识别顺序确定的</p></blockquote><h4 id="Linux操作系统中的DNS服务器主要有哪几种类型？"><a href="#Linux操作系统中的DNS服务器主要有哪几种类型？" class="headerlink" title="Linux操作系统中的DNS服务器主要有哪几种类型？"></a>Linux操作系统中的DNS服务器主要有哪几种类型？</h4><blockquote><p>缓冲域名服务器 </p><p>主域名服务器 </p><p>从域名服务器</p></blockquote><h4 id="RAID技术主要解决什么问题？"><a href="#RAID技术主要解决什么问题？" class="headerlink" title="RAID技术主要解决什么问题？"></a>RAID技术主要解决什么问题？</h4><blockquote><p>RAID技术可以解决储存设备的读写问题及数据的冗余备份问题</p></blockquote><h4 id="若想查看的文件具有较长的内容，那么使用cat，more，head，tail中那个问题命令最合适"><a href="#若想查看的文件具有较长的内容，那么使用cat，more，head，tail中那个问题命令最合适" class="headerlink" title="若想查看的文件具有较长的内容，那么使用cat，more，head，tail中那个问题命令最合适"></a>若想查看的文件具有较长的内容，那么使用cat，more，head，tail中那个问题命令最合适</h4><blockquote><p>more</p></blockquote><h4 id="简述Linux系统分区原理，分区，设备名称，格式化以及挂载"><a href="#简述Linux系统分区原理，分区，设备名称，格式化以及挂载" class="headerlink" title="简述Linux系统分区原理，分区，设备名称，格式化以及挂载"></a>简述Linux系统分区原理，分区，设备名称，格式化以及挂载</h4><blockquote><p>分区：将一大块硬盘分为若干小的逻辑分区<br>格式化：写入文件系统<br>分区设备文件名；Linux系统中，每个分区都会定义设备文件名，依据设备文件名找分区<br>挂载：给每个分区分配挂载点，也就是建立分区与目录的连结，如<br>&#x2F; 根<br>&#x2F;swap 交换<br>&#x2F;boot 启动</p></blockquote><h4 id="测试DNS服务器和配置是否正确有哪些方法"><a href="#测试DNS服务器和配置是否正确有哪些方法" class="headerlink" title="测试DNS服务器和配置是否正确有哪些方法"></a>测试DNS服务器和配置是否正确有哪些方法</h4><blockquote><p>nslookup<br>ping</p></blockquote><h4 id="对逻辑卷扩容，缩容有何异同点"><a href="#对逻辑卷扩容，缩容有何异同点" class="headerlink" title="对逻辑卷扩容，缩容有何异同点"></a>对逻辑卷扩容，缩容有何异同点</h4><blockquote><p>同：都需要先取消逻辑卷与目录的挂载关联<br>异：扩容先扩容后检查文件系统完整性<br>    缩容为保证数据安全，先检查文件系统完整性在缩容</p></blockquote><h4 id="输出重定向-与-的区别是什么？"><a href="#输出重定向-与-的区别是什么？" class="headerlink" title="输出重定向&gt;与&gt;&gt;的区别是什么？"></a>输出重定向&gt;与&gt;&gt;的区别是什么？</h4><blockquote><p>‘&gt;’是定向输出文件，如果文件存在就清空，如果不存在就创建</p><p>‘&gt;&gt;’是将输出内容追加到目标文件中，如果文件存在就将新的内容追加到文件末尾，如果不存在就创建</p></blockquote><h4 id="列举Linux操作系统的主要特点"><a href="#列举Linux操作系统的主要特点" class="headerlink" title="列举Linux操作系统的主要特点"></a>列举Linux操作系统的主要特点</h4><blockquote><p>开放性 </p><p>多用户 </p><p>多任务 </p><p>设备独立性 </p><p>丰富的网络功能 </p><p>可靠的系统安全 </p><p>良好的可移植性</p></blockquote><h4 id="RAID-0和RAID-5哪个更安全？"><a href="#RAID-0和RAID-5哪个更安全？" class="headerlink" title="RAID 0和RAID 5哪个更安全？"></a>RAID 0和RAID 5哪个更安全？</h4><blockquote><p>RAID 0 没有数据冗余功能，所以RAID 5 更安全。</p></blockquote><h4 id="有哪些命令可以用来查看文件的内容，这些命令有什么特点？"><a href="#有哪些命令可以用来查看文件的内容，这些命令有什么特点？" class="headerlink" title="有哪些命令可以用来查看文件的内容，这些命令有什么特点？"></a>有哪些命令可以用来查看文件的内容，这些命令有什么特点？</h4><blockquote><p>cat 合并和显示文件内容适合查看小文件，简单易用<br>less 分页显示文件内容，允许前后翻页，适合查看大文件<br>more 分页显示文件内容，只能向前翻页<br>head 显示文件的开头部分默认显示10行<br>tail 显示文件的末尾部分，默认显示后10行</p></blockquote><h4 id="如果硬盘需要5个分区，则至少需要几个逻辑分区？"><a href="#如果硬盘需要5个分区，则至少需要几个逻辑分区？" class="headerlink" title="如果硬盘需要5个分区，则至少需要几个逻辑分区？"></a>如果硬盘需要5个分区，则至少需要几个逻辑分区？</h4><blockquote><p>2个逻辑分区</p></blockquote><h2 id="传感网"><a href="#传感网" class="headerlink" title="传感网"></a>传感网</h2><h4 id="请说明说stm32f10vet6型号中各部分的意义"><a href="#请说明说stm32f10vet6型号中各部分的意义" class="headerlink" title="请说明说stm32f10vet6型号中各部分的意义"></a>请说明说stm32f10vet6型号中各部分的意义</h4><blockquote><p>stm32 st公司出品的基于arm内核的32位微控制器<br>f基础型<br>103stm32基础型<br>v引脚数为100<br>E内存容量为512kb<br>T封装方式为QFP封装<br>6工作温度范围为-40到+85</p></blockquote><h4 id="ADC的基本参数"><a href="#ADC的基本参数" class="headerlink" title="ADC的基本参数"></a>ADC的基本参数</h4><blockquote><p>ADC的工作模式<br>ADC转换结果的储存方式<br>ADC通道的转换时间<br>ADC时钟信号的获取</p></blockquote><h4 id="实现呼吸灯的原理是什么"><a href="#实现呼吸灯的原理是什么" class="headerlink" title="实现呼吸灯的原理是什么"></a>实现呼吸灯的原理是什么</h4><blockquote><p>PWM采用调整脉冲占空比的方式，达到调整电压与电流的效果</p></blockquote><h4 id="串口中断模式发送和接收数据"><a href="#串口中断模式发送和接收数据" class="headerlink" title="串口中断模式发送和接收数据"></a>串口中断模式发送和接收数据</h4><blockquote><p>HAL_UART_Transmit_IT(); 串口中断模式发送<br>HAL_UART_Receive_IT();串口中断模式接收</p></blockquote><h4 id="串口发送和接收函数"><a href="#串口发送和接收函数" class="headerlink" title="串口发送和接收函数"></a>串口发送和接收函数</h4><blockquote><p>HAL_UART_Transmit();串口轮询机制发送，使用超时管理机制<br>HAL_UART_Receive();串口轮询机制接收，使用超时管理机制</p></blockquote><h4 id="can通信帧的类型"><a href="#can通信帧的类型" class="headerlink" title="can通信帧的类型"></a>can通信帧的类型</h4><blockquote><p>数据帧 遥控帧 错误帧 过载帧 帧间隔</p></blockquote><h2 id="openstack-云平台"><a href="#openstack-云平台" class="headerlink" title="openstack 云平台"></a>openstack 云平台</h2><h4 id="创建安全组虚拟机"><a href="#创建安全组虚拟机" class="headerlink" title="创建安全组虚拟机"></a>创建安全组虚拟机</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">open stack server create --flavor flavor-02 --image ubuntu-img-01 --nic net-id=net-03b --security-group web-sg webserver-vm<br></code></pre></td></tr></table></figure><h4 id="删除网络"><a href="#删除网络" class="headerlink" title="删除网络"></a>删除网络</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">先删除子网:open stack subnet delete unused-subnet<br><br>再删除网络:openstack network delete unused-network<br></code></pre></td></tr></table></figure><h4 id="查看虚拟机情况"><a href="#查看虚拟机情况" class="headerlink" title="查看虚拟机情况"></a>查看虚拟机情况</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">openstack server show qppserver-vm -c address -c os-extened-volunmes:volumes_attached -c networks  -f value | grep -E <span class="hljs-string">&quot;address|mac&quot;</span><br></code></pre></td></tr></table></figure><h4 id="创建主机"><a href="#创建主机" class="headerlink" title="创建主机"></a>创建主机</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">openstack server creat VM_host --image cirros --flavor myflavor --network vm-network<br></code></pre></td></tr></table></figure><h4 id="挂起恢复"><a href="#挂起恢复" class="headerlink" title="挂起恢复"></a>挂起恢复</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">挂起命令:openstcak server <span class="hljs-built_in">suspend</span> dbserver-vm;<br>恢复命令:openstack server resume dbserver-vm<br></code></pre></td></tr></table></figure><h4 id="加密密钥"><a href="#加密密钥" class="headerlink" title="加密密钥"></a>加密密钥</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">openstack volume create --size 50 --volume-type high-perf --encryption-provider luks --encryption-key-id encrypt-key-01 highperf-volume<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">创建网络 openstack network create test-isolate-network<br>创建子网 openstack subnet create --network tes-isolate-network --subnet-range 172.16.10.0/24 --gateway 172.16.10.1 --dns-namerver 8.8.8.8 test-subnet<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">创建网络<br>openstack subent create --network vm-network --allocation pool start=192.168.20.100.end=192.168.20.200 --dns-nameserver 114.114.114.114 --subnet-range 192.168.20.0/24 vm-subnetwork<br></code></pre></td></tr></table></figure><h4 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">open stack image create --file win-server-custom.qcow2 --disk-format qcw2 --container-format bare --property tags=<span class="hljs-string">&quot;windows,server&quot;</span> win-server-optimized<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593718.gif&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="题库" scheme="https://www.xubuyuan.top/tags/%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>华三交换机配置命令</title>
    <link href="https://www.xubuyuan.top/2024/11/16/%E5%8D%8E%E4%B8%89%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.xubuyuan.top/2024/11/16/%E5%8D%8E%E4%B8%89%E4%BA%A4%E6%8D%A2%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/</id>
    <published>2024-11-16T06:13:27.000Z</published>
    <updated>2024-12-23T00:46:56.900Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593691.gif"/ loading="lazy"><span id="more"></span><h1 id="华三交换机命令"><a href="#华三交换机命令" class="headerlink" title="华三交换机命令"></a>华三交换机命令</h1><h3 id="Vlan-划分与配置"><a href="#Vlan-划分与配置" class="headerlink" title="Vlan 划分与配置"></a>Vlan 划分与配置</h3><p>基础记了一点常用命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int g1/0/1 #进入接口<br>int v 10  #进入vlan<br>v b 10 20 #批量创建vlan<br>int b 1   #创建聚合口<br>p link-type t #改变为turk<br>p t p v 10 #允许不同vlan经过<br>ip add 10.10.10.10 24 #配置ip地址<br></code></pre></td></tr></table></figure><h3 id="创建交换核心堆叠"><a href="#创建交换核心堆叠" class="headerlink" title="创建交换核心堆叠"></a>创建交换核心堆叠</h3><p>​<strong>核心堆叠是一种网络技术，它允许将多台支持堆叠特性的交换机通过专用的堆叠口连接起来，从逻辑上变成一台交换设备，作为一个整体参与数据转发。</strong></p><p>​准备两台交换机</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163202229.png" loading="lazy"></p><h4 id="SW1配置"><a href="#SW1配置" class="headerlink" title="SW1配置"></a>SW1配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs /">irf domain 10  #配置domain域<br>irf member 1 priority 10  #配置设备权重(大的为主)<br>int r t1/0/49 to t1/0/50  <br>shutdown    #端口加入之前必须先shutdowm<br>qu      <br>irf-port 1/1  #irf -port 1/1 注解前一个1代表交换机的member号，后一个代表irf-port的端口号<br>port group int t1/0/49<br>port group int t1/0/50<br>qu<br>int r t1/0/49 to t1/0/50  <br>undo shutdown<br>qu<br>irf-port-configuration active  #激活配置<br>save保存<br></code></pre></td></tr></table></figure><h4 id="SW2配置"><a href="#SW2配置" class="headerlink" title="SW2配置"></a>SW2配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">irf domain 10  #配置domain域<br>irf member 1 remember 2    #重置编号后需要重启设备<br>qu<br>reboot<br>.......<br>irf member 2 priority 1  #配置设备权重(默认为1，此步可省略)<br>int r t2/0/49 to t2/0/50  <br>shutdown    #端口加入之前必须先shutdowm<br>qu      <br>irf-port 2/2<br>port group int t2/0/49<br>port group int t2/0/50<br>qu<br>int r t2/0/49 to t2/0/50  <br>undo shutdown<br>qu<br>irf-port-configuration active  #激活配置<br>save保存<br></code></pre></td></tr></table></figure><p>​<strong>完成上述配置后,接线，堆叠完成</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dis irf    #查看irf配置<br></code></pre></td></tr></table></figure><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163057374.png" loading="lazy"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dis irf link  #查看irf接口(多用于排错)<br></code></pre></td></tr></table></figure><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163103741.png" loading="lazy"></p><h4 id="IRF-心跳检测-选做"><a href="#IRF-心跳检测-选做" class="headerlink" title="IRF 心跳检测(选做)"></a>IRF 心跳检测(选做)</h4><h3 id="静态路由部署与配置"><a href="#静态路由部署与配置" class="headerlink" title="静态路由部署与配置"></a>静态路由部署与配置</h3><p>原理：</p><p>路由器的核心作用是实现网络互连，数据转发，路由器工作时需要建立和更新路由表，因为路由器互联的是不同网段，因此能隔离广播，能快速转发分组数据。</p><p>路由表，简单说来就是指挥数据如何发送到目的地的表</p><p>实验准备两台路由器，两台PC</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213164103916.png" loading="lazy"></p><p>拓扑搭建完成后先使用ping测试网络是否连通</p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163140436.png" style="zoom:200%;" / loading="lazy"><p>ping不通是因为路由无法正常的找到IP地址发送数据包</p><h4 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[RAT-1]ip route-static 10.10.20.0 24 10.10.30.2<br>[RAT-2]ip route-static 10.10.10.0 24 10.10.30.1<br></code></pre></td></tr></table></figure><p>成功ping通！</p><p>查看一下路由表 可以看到路由已经添加了</p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163146508.png" style="zoom:200%;" / loading="lazy"><h4 id="默认路由"><a href="#默认路由" class="headerlink" title="默认路由"></a>默认路由</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[RAT-1]ip route-static 0.0.0.0 0 10.10.30.2<br>[RAT-2]ip route-static 0.0.0.0 0 10.10.30.1<br></code></pre></td></tr></table></figure><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213163153148.png" loading="lazy"></p><h3 id="华三OSPF配置"><a href="#华三OSPF配置" class="headerlink" title="华三OSPF配置"></a>华三OSPF配置</h3><h4 id="技术简介"><a href="#技术简介" class="headerlink" title="技术简介"></a>技术简介</h4><p>实验拓扑</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241214112704356.png" loading="lazy"></p><p>基础配置</p><h4 id="OSPF单域配置"><a href="#OSPF单域配置" class="headerlink" title="OSPF单域配置"></a>OSPF单域配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTA<br>int g0/0<br>ip add 10.10.10.2 24<br>int s1/0<br>ip add 10.10.20.1 30<br>int s2/0<br>ip add 10.10.40.1 30<br>ospf 10<br>a 0<br>net 0.0.0.0 255.255.255.255    #默认路由<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTB<br>int s1/0<br>ip add 10.10.20.2 30<br>int s2/0<br>ip add 10.10.50.2 30<br>int g0/0<br>ip add 10.10.30.2 24<br>ospf 10 <br>a 0<br>net  10.10.20.2 0.0.0.3<br>net  10.10.30.2 0.0.0.255<br>net  10.10.50.2 0.0.0.3<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTC<br>int s1/0<br>ip add 10.10.40.2 30<br>int s2/0<br>ip add 10.10.50.1 30<br>int g0/0<br>ip add 10.10.60.2 24<br>ospf 10 <br>a 0<br>net  0.0.0.0 255.255.255.255<br></code></pre></td></tr></table></figure><h4 id="OSPF多域配置"><a href="#OSPF多域配置" class="headerlink" title="OSPF多域配置"></a>OSPF多域配置</h4><p>在OSPF中，必须有一个骨干区域（通常为Area 0），所有其他区域必须直接或间接地连接到骨干区域。骨干区域负责在不同区域之间传递路由信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#ip 地址配置同上<br>[RTA]  <br>ospf 100<br>a  0<br>net 0.0.0.0 255.255.255.255<br><br>[RTB]<br>ospf 100<br>a  1<br>net  0.0.0.0 255.255.255.255<br><br>[RTC]<br>ospf 100<br>a 0<br>net 10.10.40.0 0.0.0.255<br>qu<br>a 1<br>net 10.10.50.0 0.0.0.255<br>net 10.10.60.0 0.0.0.255<br>save<br></code></pre></td></tr></table></figure><h3 id="网络访问控制"><a href="#网络访问控制" class="headerlink" title="网络访问控制"></a>网络访问控制</h3><h4 id="访问控制列表ACl"><a href="#访问控制列表ACl" class="headerlink" title="访问控制列表ACl"></a>访问控制列表ACl</h4><h2 id="ACL简介"><a href="#ACL简介" class="headerlink" title="ACL简介"></a>ACL简介</h2><p>ACL（Access Control List，访问控制列表）是一系列用于识别报文流的规则的集合。这里的规则是指描述报文匹配条件的判断语句，匹配条件可以是报文的源地址、目的地址、端口号等。设备依据ACL规则识别出特定的报文，并根据预先设定的策略对其进行处理，最常见的应用就是使用ACL进行报文过滤。此外，ACL还可应用于诸如路由、安全、QoS等业务中识别报文，对这些报文的具体处理方式由应用ACL的业务模块来决定</p><h5 id="基本ACL"><a href="#基本ACL" class="headerlink" title="基本ACL"></a>基本ACL</h5><p>基本ACL根据报文的源IP地址来制订规则，对报文进行匹配</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"><br></code></pre></td></tr></table></figure><h1 id="NAPT-telent"><a href="#NAPT-telent" class="headerlink" title="NAPT+telent"></a>NAPT+telent</h1><p>拓扑图</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213183716661.png" loading="lazy"></p><p><strong>内网PC</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ip add 10.10.10.10 24<br>网关  10.10.10.2<br></code></pre></td></tr></table></figure><p><strong>内网服务器</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int g0/0<br>ip add 10.10.1.10 24<br>ip rou 0.0.0.0 0 10.10.10.1.2<br>#开启tenlent 远程访问服务<br>telent server enable<br>line vty 0 4<br>aouthenticaition-mode scheme<br>user-role leave-15<br>qu<br>local-user xz<br>passwdorld simple 12345<br>service-type telent<br>authorization-attribute user-role leave-15<br></code></pre></td></tr></table></figure><p><strong>核心交换</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int vlan1<br>ip add 10.10.10.2 24<br>int g1/0/2 <br>port link-mode route<br>ip add 10.10.1.2 24<br>int g1/0/3<br>port like-mode route<br>ip add 10.10.2.1 30<br>ip rou 0.0.0.0 0 10.10.10.2.2<br></code></pre></td></tr></table></figure><p><strong>带宽路由</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int g0/0<br>ip add 10.10.2.2 30<br>int s1/0<br>ip add 100.200.1.1 28<br>ip rou 0.0.0.0 0 100.200.1.2<br>ip rou 10.10.0.0 16 10.10.2.1<br>acl nember 2000<br>rule p s 10.10.0.0 16 <br>nat add group 1<br>add 100.200.1.3  100.200.14<br>qu<br>int s1/0<br>nat outbound 2000<br>nat server protocol tcp global 100.200.3[公网] 23 inside 10.10.1.10[内网] 23<br></code></pre></td></tr></table></figure><p><strong>公网路由</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int s1/0<br>ip add 100.200.1.2 28<br>int g0/0<br>ip add 20.20.20.2 24<br></code></pre></td></tr></table></figure><p><strong>外网PC</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ip add 20.20.20.10 24<br>网关   20.20.20.2<br></code></pre></td></tr></table></figure><p>此时先在内网测试telnet 服务是否失败</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213183109189.png" loading="lazy"></p><p>内网成功访问 telnet</p><p>外网PC试一下</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213183318358.png" loading="lazy"></p><p>大成功！</p><p>恭喜你学会了NAT server + telnet</p><h1 id="ppp"><a href="#ppp" class="headerlink" title="ppp"></a>ppp</h1><p>#PAP认证</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTA<br>int s1/0<br>linl-protocol ppp<br>ppp auth-mode pap<br>qu<br>local-user xz class network<br>password simlpe 123456<br>service-type ppp<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTB<br><br>int s1/0<br><br>link-protocol ppp<br><br>ppp pap local-user xz password simple 123456<br><br></code></pre></td></tr></table></figure><h3 id="MP"><a href="#MP" class="headerlink" title="#MP"></a>#MP</h3><p>创建MP口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTA配置<br>int mp 1<br>ip add 10.1.1.1 30<br>qu<br><br>int  r s1/0 s2/0<br>ppp mp m 1<br>qu<br><br>local-user admin class network<br>passworld simple 123<br>service-type ppp<br>qu<br>int r s1/0 s2/0<br>ppp auth-mode chap<br>ppp chap user xz<br>ppp chap passwd simple 456<br>qu<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">RTB配置<br>int mp 1<br>ip add 10.1.1.2 30<br><br>local-user xz class network<br>passwdord simple 456<br>service-type ppp<br>qu<br><br>int r s1/0 s2/0<br>ppp auth-mode chap<br>ppp chap user admin<br>ppp chap password simple 123<br></code></pre></td></tr></table></figure><p>验证配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dis int br<br><br>ping 10.1.1.1<br><br></code></pre></td></tr></table></figure><h1 id="期末作业"><a href="#期末作业" class="headerlink" title="期末作业"></a>期末作业</h1><h3 id="PC"><a href="#PC" class="headerlink" title="PC"></a>PC</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">pc1<br>ip add 172.10.0.100/24<br>gateway 172.10.0.254<br><br>pc2<br>ip add 172.20.0.100/24<br>gateway 172.20.0.254<br><br>pc3<br>ip add 100.0.1.100/24<br>gateway 100.0.1.254<br></code></pre></td></tr></table></figure><h3 id="S2-S3"><a href="#S2-S3" class="headerlink" title="S2&amp;S3"></a>S2&amp;S3</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#S2<br>v 10<br>po g1/0/5 to g1/0/8<br>v 20<br>po g1/0/9 to g1/0/12<br>int g 1/0/2<br>port link-type trunk<br>port trunk p v all<br>stp g e<br>stp m rstp<br>stp pir 4096<br><br><br>#S3<br>v 10<br>po g1/0/5 to g1/0/8<br>v 20<br>po g1/0/9 to g1/0/12<br>int g 1/0/2<br>port link-type trunk<br>port trunk p v all<br>stp g e<br>stp rstp<br><br></code></pre></td></tr></table></figure><h3 id="S1"><a href="#S1" class="headerlink" title="S1"></a>S1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">v 100<br>po g1/0/1<br>v 10<br>po g1/0/2<br>v 20<br>po g1/0/3<br>int v10 <br>ip add 172.10.0.1 24<br>int v20 <br>ip add 172.20.0.1<br>int r g1/0/2 g1/0/3<br>port link-type trunk<br>port trunk p v all<br><br>int g1/0/1<br>port link-mode route<br>ip add 10.0.0.1 30<br><br>#stp<br>stp g e<br>stp mo rstp<br>stp pri 0<br>#ospf<br>ospf 10<br>a 0<br>network 0.0.0.0 255.255.255.255<br>ip rou 0.0.0.0 0 10.0.0.2 <br></code></pre></td></tr></table></figure><h3 id="R1"><a href="#R1" class="headerlink" title="R1"></a>R1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int g0/0<br>ip add 10.0.0.2 30<br>int mp 1<br>ip add 100.0.0.1 30<br>int r s1/0 s2/0<br>ppp mp mp1<br><br>ip rou 0.0.0.0 0 100.0.0.2<br><br>NAT#<br>acl nember 2000<br>rule p s 172.0.0.0 0.255.255.255<br>q<br>nat address group 1<br>add 202.0.0.1 202.0.0.6<br>q<br>int mp 1<br>nat oubound 2000 address group 1<br><br><br></code></pre></td></tr></table></figure><h3 id="R2"><a href="#R2" class="headerlink" title="R2"></a>R2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">int mp 1<br>ip add 100.0.0.2 30<br>q<br>int r s1/0 s2/0<br>ppp mp mp1<br>ip rou 100.0.0.0 24 10.0.0.6<br>ip rou 202.0.0.0 24 100.0.0.1<br><br>#telent<br>telent server enable<br>line vty 0 4<br>aouthenticaition-mode scheme<br>user-role leave-15<br><br>local-user xz<br>passwdorld simple 123456<br>service-type telent<br>authorization-attribute user-role leave-15<br><br></code></pre></td></tr></table></figure><h3 id="S4"><a href="#S4" class="headerlink" title="S4"></a>S4</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">v 100<br>po g1/0/1<br>v 101<br>po g1/0/2<br>int g1/0/1 <br>po link-mode route<br>ip add 10.0.0.6 30<br>int g1/0/2<br>po link-mode route<br>ip add 100.0.1.254<br>ip rou 0.0.0.0 0 10.0.0.5<br><br></code></pre></td></tr></table></figure><h3 id="禁止ping"><a href="#禁止ping" class="headerlink" title="禁止ping"></a>禁止ping</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">SW1<br>创建高级ACL<br>acl ad 3000<br>rule deny icmp scource 172.10.0.0 0.0.0.255 destination 172.20.0.0 0.0.0.255<br>rule deny icmp scource 172.10.0.0 0.0.0.255 destination 172.20.0.0 0.0.0.255<br>int r v10 v20<br>packet-filter 3000 inbound<br></code></pre></td></tr></table></figure><h3 id="禁止telnet"><a href="#禁止telnet" class="headerlink" title="禁止telnet"></a>禁止telnet</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">SW1<br>acl ad 3001<br>rule deny tcp soure 172.10.0.100 0 destination-port eq telnet<br>int g1/0/1<br>packet-filter 3000 outbound<br></code></pre></td></tr></table></figure><h3 id="ospf导入默认路由"><a href="#ospf导入默认路由" class="headerlink" title="ospf导入默认路由"></a>ospf导入默认路由</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">SW1<br>ospf 1<br>default-route-advertise always<br>qu<br>undo ip rou 0.0.0.0 0<br></code></pre></td></tr></table></figure><h3 id="chap-认证服务"><a href="#chap-认证服务" class="headerlink" title="chap 认证服务"></a>chap 认证服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">主认证方R2<br>local-user xz class network<br>password simple 123<br>service-type ppp<br>qu<br>int r s1/0 s2/0<br>ppp auth-mode chap#设置认证类型<br><br>R1<br>int r s1/0 s2/0<br>ppp chap user xz<br>ppp chatp password simple 123<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593691.gif&quot;/&gt;</summary>
    
    
    
    <category term="华三" scheme="https://www.xubuyuan.top/categories/%E5%8D%8E%E4%B8%89/"/>
    
    
    <category term="“交换机”" scheme="https://www.xubuyuan.top/tags/%E2%80%9C%E4%BA%A4%E6%8D%A2%E6%9C%BA%E2%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>MD语法格式</title>
    <link href="https://www.xubuyuan.top/2024/10/17/Markdown%20%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F/"/>
    <id>https://www.xubuyuan.top/2024/10/17/Markdown%20%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F/</id>
    <published>2024-10-17T02:10:35.000Z</published>
    <updated>2024-12-12T14:07:40.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown-语法格式"><a href="#Markdown-语法格式" class="headerlink" title="Markdown 语法格式"></a>Markdown 语法格式</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="#一级标题"></a>#一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="##二级标题"></a>##二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="###三级标题"></a>###三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="####四级标题"></a>####四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="#####五级标题"></a>#####五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="######六级标题"></a>######六级标题</h6><h2 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h2><p><em>斜体文本</em> **<br><em>斜体文本</em>——<br><strong>粗体文本</strong>** **<br><strong>粗体文本</strong>————<br><strong><em>同时斜体和粗体</em></strong>** ——**</p><h2 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h2><p>无序列表：</p><ul><li></li></ul><ul><li></li></ul><ul><li></li></ul><p>有序列表</p><ol><li></li><li></li><li></li></ol><h2 id="4-链接"><a href="#4-链接" class="headerlink" title="4.链接"></a>4.链接</h2><p><a href="http://url.com/">链接文本</a></p><p>[链接文本]+(<a href="http://url.com/">http://url.com</a>)</p><h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5.图片"></a>5.图片</h2><p><img src="https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg" alt="替代文本" loading="lazy"></p><p>![替代文本]+(<a href="https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg">https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg</a>)</p><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6 引用"></a>6 引用</h2><blockquote><p>这是一个引用。</p></blockquote><p>（&gt;）+ 引用文本</p><h2 id="7-代码"><a href="#7-代码" class="headerlink" title="7.代码"></a>7.代码</h2><p><code>代码</code></p><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h2><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元</td><td>单元</td></tr><tr><td>单元</td><td>单元</td></tr></tbody></table><h2 id="9-分割线"><a href="#9-分割线" class="headerlink" title="9.分割线"></a>9.分割线</h2><p>-+-+-</p><hr><p><strong>或者</strong></p><p>’***‘</p><hr><h2 id="10-任务列表"><a href="#10-任务列表" class="headerlink" title="10 任务列表"></a>10 任务列表</h2><ul><li><input checked="" disabled="" type="checkbox"> 已完成项</li><li><input disabled="" type="checkbox"> 未完成项</li><li><input checked="" disabled="" type="checkbox"> 已完成项</li><li><input disabled="" type="checkbox"> 未完成项‘</li></ul><h2 id="11-内联HTML"><a href="#11-内联HTML" class="headerlink" title="11.内联HTML"></a>11.内联HTML</h2><div>这是一个div块</div><p>’<div>这是一个div块</div>‘</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="常用" scheme="https://www.xubuyuan.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    
    <category term="语法" scheme="https://www.xubuyuan.top/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>debain 路由</title>
    <link href="https://www.xubuyuan.top/2024/10/15/Debain%E8%B7%AF%E7%94%B1/"/>
    <id>https://www.xubuyuan.top/2024/10/15/Debain%E8%B7%AF%E7%94%B1/</id>
    <published>2024-10-15T02:10:35.000Z</published>
    <updated>2024-12-12T14:07:40.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="debain-开启路由转发功能"><a href="#debain-开启路由转发功能" class="headerlink" title="debain 开启路由转发功能"></a>debain 开启路由转发功能</h2><p><strong>sysclt -w net.ipv4.ip_forward&#x3D;1</strong><br><strong>sysctp -p</strong></p><p>验证是否成功开启路由转发</p><p>sysctl net.ipv4.ip_forward</p><p>成功后会显示</p><p>net.ipv4.ip_forward &#x3D; 1<br>#代表路由转发成功开启</p><h2 id="debain-配置IP"><a href="#debain-配置IP" class="headerlink" title="debain 配置IP"></a>debain 配置IP</h2><ul><li>编辑 <code>/etc/network/interfaces</code> 文件来设置静态IP地址。</li></ul><p>auto eth0<br>iface eth0 inet static<br>    address 192.168.1.101<br>    netmask 255.255.255.0<br>    gateway 192.168.1.254<br>    dns-nameservers 8.8.8.8 8.8.4.4</p><h2 id="开启PAT端口映射连接公共互联网"><a href="#开启PAT端口映射连接公共互联网" class="headerlink" title="开启PAT端口映射连接公共互联网"></a>开启PAT端口映射连接公共互联网</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a><strong>iptables</strong></h3><p>1.<strong>确保iptables已安装</strong></p><p>apt update<br>apt install iptables</p><p>2.<strong>配置iptables进行PAT</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Debain" scheme="https://www.xubuyuan.top/categories/Debain/"/>
    
    
    <category term="debain" scheme="https://www.xubuyuan.top/tags/debain/"/>
    
  </entry>
  
  <entry>
    <title>Windows Server 域</title>
    <link href="https://www.xubuyuan.top/2024/10/12/windons%20server%20%E5%9F%9F/"/>
    <id>https://www.xubuyuan.top/2024/10/12/windons%20server%20%E5%9F%9F/</id>
    <published>2024-10-12T02:10:35.000Z</published>
    <updated>2024-12-29T05:55:45.237Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Windows-Server-域"><a href="#Windows-Server-域" class="headerlink" title="Windows Server 域"></a>Windows Server 域</h1><h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>​域是一种网络架构，它允许集中管理用户账户、计算机账户、安全策略、软件部署、组策略和其他资源</p><ol><li><p><strong>集中管理</strong>：</p><p>域允许管理员通过一个集中的位置来管理用户和计算机，而不是在每台计算机上单独进行。</p></li><li><p><strong>安全控制</strong>：</p><p>域提供了一个安全框架，可以实施统一的安全策略，如密码策略、账户锁定策略和访问控制列表（ACLs）。</p></li><li><p><strong>身份验证</strong>：</p><p>域中的用户可以使用单一登录凭证（域凭据）访问域内的所有资源，而无需为每个资源记住不同的用户名和密码。</p></li><li><p><strong>资源共享</strong>：</p><p>域允许用户和应用程序访问网络资源，如文件服务器、打印机和其他应用程序服务。</p></li><li><p><strong>策略实施</strong>：</p><p>通过组策略，管理员可以控制用户和计算机的配置，包括软件安装、桌面设置、安全设置等。</p></li><li><p><strong>目录服务</strong>：</p><p>域使用活动目录（Active Directory）作为其目录服务，它存储有关域内所有对象的信息，如用户、计算机、打印机和共享文件夹。</p></li><li><p><strong>简化管理</strong>：</p><p>域减少了管理任务的复杂性，因为许多任务可以通过自动化脚本来完成，如用户账户的创建和删除。</p></li><li><p><strong>提高效率</strong>：</p><p>域可以提高工作效率，因为用户可以轻松地访问他们需要的资源，而不需要管理员的频繁干预。</p></li><li><p><strong>可扩展性</strong>：</p><p>域结构可以随着组织的成长而扩展，支持从小型网络到大型企业环境。</p></li><li><p><strong>故障转移和高可用性</strong>：</p><p>域控制器可以配置为相互冗余，以确保在硬件故障或其他问题发生时，域服务仍然可用。</p></li></ol><h1 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h1><blockquote><p>放行ping命令(基础)<br>方法1：关闭防火墙</p><p>方法2：入站规则新建规则：放行ping命令（自定义IPv4端口）</p><p>网络连接方式设置为桥接模式</p><p>使两个网络能够互相ping通</p><p>每一个win server系统都需要进行放行ping命令的操作（检查互通）</p><p>第一台域控制器DC1配置<br>步骤1：环境准备<br>搭建winserver2019的系统环境</p><p>我们首先进行克隆为win-server-2</p><p>计算机重命名 DC1</p><p>控制面板—系统和安全—系统—高级系统设置—系统属性—计算机名  DC1</p><p>步骤2：设置Administrator账户的密码<br>设置—账户设置—PIN密码—设置密码</p><p>步骤3：配置网络信息<br>IP地址：  192.168.10.1</p><p>DNS地址：192.168.10.1</p><p>步骤4：创建第一台域控制器long.om<br>添加角色和功能  —将此服务器升级为域控制器</p><p>ps:我们还没有创建其他的域控制器，此处我们选择添加新林</p></blockquote><h3 id="补充：将域服务器降级为成员服务器"><a href="#补充：将域服务器降级为成员服务器" class="headerlink" title="补充：将域服务器降级为成员服务器"></a>补充：将域服务器降级为成员服务器</h3><blockquote><p>服务器管理器—删除角色和功能</p><p>删除功能之前，需要先对域控制器进行降级</p><p>重新开机即可操作成功</p><p>添加成员服务器MS1<br>步骤1：设置Administrator账户的密码<br>步骤2：配置网络信息<br>IP地址：192.168.10.10</p><p>DNS地址：192.168.10.1</p><p>同时开启机器：  DC1  long.com（两个网络之间需要互相ping通）</p><p>Ipconfig &#x2F;all 查看网络配置信息，ping  DC1 ，观察是否可以ping通</p><p>Ping 192.168.10.1，网络之间能够ping通再进行下一步操作</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="windonws Server" scheme="https://www.xubuyuan.top/categories/windonws-Server/"/>
    
    
    <category term="windows web" scheme="https://www.xubuyuan.top/tags/windows-web/"/>
    
  </entry>
  
  <entry>
    <title>常用网址</title>
    <link href="https://www.xubuyuan.top/2024/10/12/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80/"/>
    <id>https://www.xubuyuan.top/2024/10/12/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80/</id>
    <published>2024-10-12T02:10:35.000Z</published>
    <updated>2024-12-13T08:55:08.615Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593723.gif" loading="lazy"></p><span id="more"></span><h3 id="kimi-AIhttps-kimi-moonshot-cn"><a href="#kimi-AIhttps-kimi-moonshot-cn" class="headerlink" title="kimi AIhttps://kimi.moonshot.cn/"></a>kimi AI<a href="https://kimi.moonshot.cn/">https://kimi.moonshot.cn/</a></h3><h3 id="学习通-http-pjzy-fanya-chaoxing-com-portal"><a href="#学习通-http-pjzy-fanya-chaoxing-com-portal" class="headerlink" title="学习通      http://pjzy.fanya.chaoxing.com/portal"></a>学习通      <a href="http://pjzy.fanya.chaoxing.com/portal">http://pjzy.fanya.chaoxing.com/portal</a></h3><h3 id="红队命令https-book-shentoushi-top"><a href="#红队命令https-book-shentoushi-top" class="headerlink" title="红队命令https://book.shentoushi.top/"></a>红队命令<a href="https://book.shentoushi.top/">https://book.shentoushi.top/</a></h3><h3 id="P站国内镜像https-www-vilipix-com"><a href="#P站国内镜像https-www-vilipix-com" class="headerlink" title="P站国内镜像https://www.vilipix.com/"></a>P站国内镜像<a href="https://www.vilipix.com/">https://www.vilipix.com/</a></h3><h3 id="次元云订阅https-ciyy-cc-index-php-stage-dashboard"><a href="#次元云订阅https-ciyy-cc-index-php-stage-dashboard" class="headerlink" title="次元云订阅https://ciyy.cc/index.php/#/stage/dashboard"></a>次元云订阅<a href="https://ciyy.cc/index.php/#/stage/dashboard">https://ciyy.cc/index.php/#/stage/dashboard</a></h3><h3 id="vercel部署https-vercel-com-xubuyuan18s-projects"><a href="#vercel部署https-vercel-com-xubuyuan18s-projects" class="headerlink" title="vercel部署https://vercel.com/xubuyuan18s-projects"></a>vercel部署<a href="https://vercel.com/xubuyuan18s-projects">https://vercel.com/xubuyuan18s-projects</a></h3><h3 id="清华镜像站https-mirrors-tuna-tsinghua-edu-cn"><a href="#清华镜像站https-mirrors-tuna-tsinghua-edu-cn" class="headerlink" title="清华镜像站https://mirrors.tuna.tsinghua.edu.cn/"></a>清华镜像站<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></h3><h3 id="中科大镜像站https-lug-ustc-edu-cn-wiki-lug-services-mirrors"><a href="#中科大镜像站https-lug-ustc-edu-cn-wiki-lug-services-mirrors" class="headerlink" title="中科大镜像站https://lug.ustc.edu.cn/wiki/lug/services/mirrors/"></a>中科大镜像站<a href="https://lug.ustc.edu.cn/wiki/lug/services/mirrors/">https://lug.ustc.edu.cn/wiki/lug/services/mirrors/</a></h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/1733826593723.gif&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.xubuyuan.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="网站" scheme="https://www.xubuyuan.top/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>nginx</title>
    <link href="https://www.xubuyuan.top/2024/10/10/nginx/"/>
    <id>https://www.xubuyuan.top/2024/10/10/nginx/</id>
    <published>2024-10-10T10:20:09.000Z</published>
    <updated>2024-12-12T14:07:40.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nginx-配置问题与解决方法"><a href="#Nginx-配置问题与解决方法" class="headerlink" title="Nginx 配置问题与解决方法"></a>Nginx 配置问题与解决方法</h1><p>Nginx 配置与问题解析</p><h1 id="Nginx配置与解析"><a href="#Nginx配置与解析" class="headerlink" title="Nginx配置与解析"></a>Nginx配置与解析</h1><p><code>Nginx</code>默认的配置文件是在安装目录下的 <code>conf</code>目录下，后续对 <code>Nginx</code>的使用基本上都是对此配置文件进行相应的修改。修改过<code>nginx.conf</code>配置文件，记得要重启<code>Nginx</code>服务</p><h2 id="安装nginx-基础环境配置"><a href="#安装nginx-基础环境配置" class="headerlink" title="安装nginx (基础环境配置)"></a>安装nginx (基础环境配置)</h2><ul><li><p>yum install nginx #使用yum命令安装</p></li><li><p>systemctl stop firewalld #实验环境下关闭防火墙与SElniunx策略</p></li><li><p>setenforce 0</p></li><li><p>systemctl start nginx#启动nginx服务</p><p>在本地浏览器中输入本机IP地址，显示nginx主界面则nginx服务成功启动</p></li></ul><h2 id="配置个性化web界面"><a href="#配置个性化web界面" class="headerlink" title="配置个性化web界面"></a>配置个性化web界面</h2><h3 id="新建网站首页"><a href="#新建网站首页" class="headerlink" title="新建网站首页"></a>新建网站首页</h3><ul><li>echo “this is nginx web server” &gt; &#x2F;var&#x2F;ww&#x2F;html index.html<ul><li>vi &#x2F;etc&#x2F;nginx&#x2F;ngin #新建并编辑nginx的配置文件<br>server {<br>　　　　listen 80;#监听端口<br>       server_name localhost; #本机IP或域名<br>  location &#x2F; {<br>  root &#x2F;var&#x2F;www&#x2F;html;#主目录<br>  index index.html;<br>  }<br>}</li><li>nginx -t      #然后使用命令验证nginx语法正确性<br>tips:尽量不要修改nginx的主配置文件，在&#x2F;cond.d 目录下的文件会被nginx默认识别。</li></ul></li><li>重新通过web界面访问nginx主页</li></ul><h2 id="配置Nginx反向代理"><a href="#配置Nginx反向代理" class="headerlink" title="配置Nginx反向代理"></a>配置Nginx反向代理</h2><h3 id="实现效果：使用-Nginx-反向代理，访问IP直接跳转到百度主页"><a href="#实现效果：使用-Nginx-反向代理，访问IP直接跳转到百度主页" class="headerlink" title="实现效果：使用 Nginx 反向代理，访问IP直接跳转到百度主页"></a>实现效果：使用 Nginx 反向代理，访问IP直接跳转到百度主页</h3><p><strong>PS</strong>：此处如果要想从指定域名跳转到本机指定的ip，需要修改本机的hosts文件。</p><p>配置代码</p><p>server {<br>    listen       80;<br>    server_name  虚拟机IP;</p><p>location &#x2F; {<br>    proxy_pass  <a href="http://www.baidu.com/">http://www.baidu.com</a><br>    }<br>}</p><p>如上配置，Nginx监听 80端口，访问虚拟机IP（不加端口号时默认为 80端口），访问该IP时会跳转到 百度主页上。</p><h2 id="配置Nginx负载均衡"><a href="#配置Nginx负载均衡" class="headerlink" title="配置Nginx负载均衡"></a>配置Nginx负载均衡</h2><h3 id="负载均衡的作用"><a href="#负载均衡的作用" class="headerlink" title="负载均衡的作用"></a>负载均衡的作用</h3><p>解决服务器的高并发压力，提高应用程序的处理性能；<br>提供故障转移，实现高可用；<br>通过添加或减少服务器数量，增强网站的可扩展性；<br>在负载均衡器上进行过滤，可以提高系统的安全性。</p><h4 id="Nginx负载均衡配置"><a href="#Nginx负载均衡配置" class="headerlink" title="Nginx负载均衡配置"></a>Nginx负载均衡配置</h4><h5 id="代理服务器-配置"><a href="#代理服务器-配置" class="headerlink" title="代理服务器 配置"></a>代理服务器 配置</h5><p>vi &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><p>1.在Nnginx的主配置文件下的http块中配置</p><pre><code># 设置服务器组upstream backend &#123;    server localhost;    server localhost;&#125;</code></pre><h6 id="2-在server块下增加配置"><a href="#2-在server块下增加配置" class="headerlink" title="2.在server块下增加配置"></a>2.在server块下增加配置</h6><p>server {<br>        listen 80;<br>        server_name localhost;<br>        location &#x2F; {</p><p>​# backend 就是服务器组的名称</p><p>​proxy_pass <a href="http://backend/">http://backend/</a>;<br>​}<br>​}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="OpenEuler" scheme="https://www.xubuyuan.top/categories/OpenEuler/"/>
    
    
    <category term="webserver" scheme="https://www.xubuyuan.top/tags/webserver/"/>
    
  </entry>
  
  <entry>
    <title>docker原理</title>
    <link href="https://www.xubuyuan.top/2024/10/09/docker%E5%8E%9F%E7%90%86/"/>
    <id>https://www.xubuyuan.top/2024/10/09/docker%E5%8E%9F%E7%90%86/</id>
    <published>2024-10-09T15:03:25.000Z</published>
    <updated>2024-12-13T08:47:51.353Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="docker原理"><a href="#docker原理" class="headerlink" title="docker原理"></a>docker原理</h1><h2 id="一、Docker背景介绍。"><a href="#一、Docker背景介绍。" class="headerlink" title="一、Docker背景介绍。"></a>一、Docker背景介绍。</h2><h3 id="1、什么是docker。"><a href="#1、什么是docker。" class="headerlink" title="1、什么是docker。"></a>1、什么是docker。</h3><h4 id="Docker，翻译过来就是码头工人"><a href="#Docker，翻译过来就是码头工人" class="headerlink" title="Docker，翻译过来就是码头工人"></a>Docker，翻译过来就是码头工人</h4><p>Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可抑制的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化。容器完全使用沙盒机制，相互之间不会存在任何接口。几乎没有性能开销，可以很容易的在机器和数据中心运行。最重要的是，他们不依赖于任何语言、框架或者包装系统。</p><p>小知识：沙盒也叫沙箱（sandbox）。在计算机领域指一种虚拟技术，而且多用于计算机安全技术。安全软件可以让它在沙盒中运行，如果含有恶意行为，则禁止程序的进一步运行，而这不会对系统造成任何危害。</p><p>Docker是dotCloud公司开源的一个基于LXC的高级容器引擎，源码托管在Github上，基于go语言并且遵从Apache2.0协议开源。<br>GitHub地址：<a href="https://github.com/moby/moby">https://github.com/moby/moby</a></p><p>小知识：LXC为Linux Container的简写。Linux Container 容器是一种内核虚拟化技术，可以提供轻量级的虚拟化，以便隔离进程和资源，而且不需要提供指令解释机制以及全虚拟化的其他复杂性。<br>LXC主要通过Kernel的namespace实现每个用户实例之间的项目隔离，通过cgroup实现对资源的配额和调度。</p><p>docker官网：<a href="https://www.docker.com/">https://www.docker.com</a><br>docker中文库:<a href="https://www.docker.org.cn/">https://www.docker.org.cn/</a></p><h3 id="2、Docker容器技术与虚拟机的区别。"><a href="#2、Docker容器技术与虚拟机的区别。" class="headerlink" title="2、Docker容器技术与虚拟机的区别。"></a>2、Docker容器技术与虚拟机的区别。</h3><h4 id="docker相较于VM的优点："><a href="#docker相较于VM的优点：" class="headerlink" title="docker相较于VM的优点："></a>docker相较于VM的优点：</h4><p>1、比VM小、快，Docker容器的尺寸减小相比于整个虚拟机大大简化了分布<br>到云和分发时间的开销。Docker启动一个容器实例时间仅仅需要几秒钟。</p><p>2、Docker是一个开放的平台，构建、发布和运行分布式应用程序。</p><p>3、开发人员不需要关系具体是哪个Linux操作系统</p><p>4、Google、微软（azure）、亚马逊、IBM等都支持docker。</p><p>5、Docker支持Unix&#x2F;Linux操作系统，也支持Windows和Mac。</p><h4 id="Docker局限性："><a href="#Docker局限性：" class="headerlink" title="Docker局限性："></a>Docker局限性：</h4><p>Docker用于应用程序时是最有用的，但并不包含数据。日志、数据库等通常放在Docker容器外。一个容器的镜像通常都很小，不用和存储大量数据，存储可以通过外部挂载等方式使用，比如：NFS、ipsan、MFS等 ，或者docker命令 ，-v映射磁盘分区。<br>总之，docker只用于计算，存储交给别人。</p><h3 id="3、通过docker架构图初步了解docker。"><a href="#3、通过docker架构图初步了解docker。" class="headerlink" title="3、通过docker架构图初步了解docker。"></a>3、通过docker架构图初步了解docker。</h3><p>等了解了docker之后，这张图所代表的的内容就很清晰明了，希望大家学完docker之后还能回来看看这张图。这里简单给大家介绍一下docker的工作流程。<br>工作流程：<br>1、启动docker<br>2、下载镜像到本地<br>3、启动docker容器实例<br>提示：大家可以去注册一个dockerhub，之后会详细给大家讲解它的作用（非常重要！连docker hub账号都没有，玩什么docker！）。</p><h4 id="Docker核心技术"><a href="#Docker核心技术" class="headerlink" title="Docker核心技术:"></a>Docker核心技术:</h4><p>1、Namespace —&gt; 实现Container的进程、网络、消息、文件系统和主机名的隔离。<br>2、Cgroup —&gt; 实现对资源的配额和调度。<br>注意：Cgroup的配额，可以指定实例使用的CPU个数，内存大小等</p><h3 id="4、Docker特性。"><a href="#4、Docker特性。" class="headerlink" title="4、Docker特性。"></a>4、Docker特性。</h3><p>文件系统隔离：每个进程容器运行在一个完全独立的根文件系统里。</p><p>资源隔离：系统资源，像CPU和内存等可以分配到不同的容器中，使用cgroup。<br>网络隔离：每个进程容器运行在自己的网路空间，虚拟接口和IP地址。</p><p>日志记录：Docker将收集到和记录的每个进程容器的标准流（stdout&#x2F;stderr&#x2F;stdin），用于实时检索或者批量检索</p><p>变更管理：容器文件系统的变更可以提交到新的镜像中，并可重复使用以创建更多的容器。无需使用模板或者手动配置。</p><p>交互式shell：Docker可以分配一个虚拟终端并且关联到任何容器的标准输出上，例如运行一个一次性交互shell。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="OpenEuler" scheme="https://www.xubuyuan.top/categories/OpenEuler/"/>
    
    
    <category term="docker" scheme="https://www.xubuyuan.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hexo折腾日记</title>
    <link href="https://www.xubuyuan.top/2024/10/01/hexo%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/"/>
    <id>https://www.xubuyuan.top/2024/10/01/hexo%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/</id>
    <published>2024-10-01T15:41:41.000Z</published>
    <updated>2024-12-14T04:13:16.743Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo使用中遇到的问题和解决方法"><a href="#hexo使用中遇到的问题和解决方法" class="headerlink" title="hexo使用中遇到的问题和解决方法"></a>hexo使用中遇到的问题和解决方法</h1><p> 头文件定义</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">title: 标题<br>date: 时间<br>tags: “tag”<br>categories: 分类归递<br>sticky: 优先级<br>readmore: true  #封面显示<br>&lt;!-- more --&gt;  #截至显示<br></code></pre></td></tr></table></figure><p><strong>girls-index</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">- name: <br>  avatar: <br>  from: <br>  url: <br>  reason:<br></code></pre></td></tr></table></figure><p>hexo 基础命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">hexo cl #清除本地缓存文件<br>hexo g  #生成网页静态文件<br>hexo s  #启动hexo 服务<br></code></pre></td></tr></table></figure><p>遇到无法正确上传的情况可能是git仓库没有正确配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd 你的博客根目录<br>vi _conifg.yml<br>编辑<br>deploy:<br>  type: git<br>  repo: https://密钥@github.com/xubuyuan18/blog<br>  branch: main # 默认使用 master 分支<br>  保存退出<br>  <br>配置Deployment首先，你需要为自己配置身份信息，打开命令行，然后输入：<br>git config --global user.name &quot;yourname&quot;<br>git config --global user.email &quot;youremail&quot;<br>如果报错可以使用<br>git config --global user.name --replace-all yourname<br>全局替换<br><br></code></pre></td></tr></table></figure><p>hexo-yun自用配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">banner:       #开始标语<br>  enable: true<br>  title: 许步鸢的小站<br>  border: true<br>  cloud:<br>    enable: true<br>    color: white<br>  go_down:<br>    enable: true<br>    icon: ri:arrow-down-s-line<br><br>avatar:      <br>  enable: true<br>  url: /images/avatar.jpg<br>  rounded: true<br>  opacity: 1<br>  mickey_mouse: false<br>  status:<br>    enable: true<br>    emoji: 😭<br>    message: 大家一起GO一辈子好吗 #头像<br>wordcloud:<br>  enable: true<br>  height: 600<br>  count: true<br>  time: true  #云体流动效果<br><br>social:   #侧边栏图标<br>  - name: GitHub<br>    link: https://github.com/xubuyuan18<br>    icon: ri:github-line<br>    color: &#x27;#181717&#x27;<br>  - name: 哔哩哔哩动画<br>    link: https://space.bilibili.com/441828893<br>    icon: ri:bilibili-line<br>    color: &#x27;#FF8EB3&#x27;<br>footer:           #运行时间显示<br>  live_time:<br>    enable: true<br>    prefix: 本博客已运行<br>    suffix: (●&#x27;◡&#x27;●)<br>    start_time: &#x27;2024-09-06T09:00:00&#x27;<br><br>medium_zoom: true #图片放大预览<br><br>bg_image:       #背景壁纸<br>  enable: true<br>  url: https://pic2.imge.cc/2024/10/12/670a20fee140a.jpg<br>  dark: https://pic2.imge.cc/2024/10/12/670a050e8ce49.png<br>  # blur: 30px # 设置背景模糊程度<br>  opacity: 0.8<br>pages:  <br>#关闭友链链接<br>say:<br>  enable: true<br>  api: https://cdn.jsdelivr.net/gh/ElpsyCN/say@gh-pages/sentences.json<br>  # https://developer.hitokoto.cn/sentence/<br>  hitokoto:<br>    enable: true<br>    api: https://v1.hitokoto.cn #中二语录<br><br>mourn:<br>  enable: true<br>  days:<br>    - 4-4   #纪念日哀悼<br>search:<br>  path: search.json<br>  field: post<br>  format: html<br>  limit: 10000  #搜索<br>wordcount:<br>  enable: true<br>  count: true<br>  time: true  #字数统计<br># search<br># https://github.com/next-theme/hexo-generator-searchdb<br>local_search:<br>  enable: true  #搜索<br><br>reward:<br>  enable: true<br>  icon: ri:hand-coin-line<br>  comment: 如果以上文章帮助到了你，不妨请我喝杯咖啡<br>  # url: https://github.com/YunYouJun/yunyoujun.github.io/issues/96<br>  methods:<br>    - name: 支付宝<br>      path: https://pic2.imge.cc/2024/11/16/67382dc367df6.jpg<br>      color: &#x27;#00A3EE&#x27;<br>      icon: ri:alipay-line<br>    - name: 微信支付<br>      path: https://pic2.imge.cc/2024/11/16/67382dc383063.jpg<br>      color: &#x27;#2DC100&#x27;<br>      icon: ri:wechat-pay-line<br>  creative_commons:<br>  license: by-nc-sa<br>  post: true<br>  language: deed.zh<br>  clipboard: false<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="常用" scheme="https://www.xubuyuan.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    
    <category term="webserver" scheme="https://www.xubuyuan.top/tags/webserver/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="https://www.xubuyuan.top/2024/09/17/%E6%B5%8B%E8%AF%95/"/>
    <id>https://www.xubuyuan.top/2024/09/17/%E6%B5%8B%E8%AF%95/</id>
    <published>2024-09-17T02:36:42.000Z</published>
    <updated>2024-12-13T08:45:14.274Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是一篇测试，用来git仓库是否成功同步</p><p><img src="https://xubuyuan-1332571105.cos.ap-beijing.myqcloud.com/20241213162936893.png" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="测试" scheme="https://www.xubuyuan.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="https://www.xubuyuan.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
