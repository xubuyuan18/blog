<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>debain 路由</title>
    <url>/2024/10/15/Debain/</url>
    <content><![CDATA[<h2 id="debain-开启路由转发功能"><a href="#debain-开启路由转发功能" class="headerlink" title="debain 开启路由转发功能"></a>debain 开启路由转发功能</h2><p><strong>sysclt -w net.ipv4.ip_forward&#x3D;1</strong><br><strong>sysctp -p</strong></p>
<p>验证是否成功开启路由转发</p>
<p>sysctl net.ipv4.ip_forward</p>
<p>成功后会显示</p>
<p>net.ipv4.ip_forward &#x3D; 1		<br>#代表路由转发成功开启</p>
<h2 id="debain-配置IP"><a href="#debain-配置IP" class="headerlink" title="debain 配置IP"></a>debain 配置IP</h2><ul>
<li>编辑 <code>/etc/network/interfaces</code> 文件来设置静态IP地址。</li>
</ul>
<p>auto eth0<br>iface eth0 inet static<br>    address 192.168.1.101<br>    netmask 255.255.255.0<br>    gateway 192.168.1.254<br>    dns-nameservers 8.8.8.8 8.8.4.4</p>
<h2 id="开启PAT端口映射连接公共互联网"><a href="#开启PAT端口映射连接公共互联网" class="headerlink" title="开启PAT端口映射连接公共互联网"></a>开启PAT端口映射连接公共互联网</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a><strong>iptables</strong></h3><p>1.<strong>确保iptables已安装</strong></p>
<p>apt update<br>apt install iptables</p>
<p>2.<strong>配置iptables进行PAT</strong></p>
]]></content>
      <categories>
        <category>Debain</category>
      </categories>
      <tags>
        <tag>debain</tag>
      </tags>
  </entry>
  <entry>
    <title>MD语法格式</title>
    <url>/2024/10/17/Markdown%20%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="Markdown-语法格式"><a href="#Markdown-语法格式" class="headerlink" title="Markdown 语法格式"></a>Markdown 语法格式</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="#一级标题"></a>#一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="##二级标题"></a>##二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="###三级标题"></a>###三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="####四级标题"></a>####四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="#####五级标题"></a>#####五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="######六级标题"></a>######六级标题</h6><h2 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h2><p><em>斜体文本</em> 	**<br><em>斜体文本</em>	——<br><strong>粗体文本</strong>	** **<br><strong>粗体文本</strong>	————<br><strong><em>同时斜体和粗体</em></strong>	** —	—**</p>
<h2 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h2><p>无序列表：</p>
<ul>
<li></li>
</ul>
<ul>
<li></li>
</ul>
<ul>
<li></li>
</ul>
<p>有序列表</p>
<ol>
<li></li>
<li></li>
<li></li>
</ol>
<h2 id="4-链接"><a href="#4-链接" class="headerlink" title="4.链接"></a>4.链接</h2><p><a href="http://url.com/">链接文本</a></p>
<p>[链接文本]+(<a href="http://url.com/">http://url.com</a>)</p>
<h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5.图片"></a>5.图片</h2><p><img src="https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg" alt="替代文本" loading="lazy"></p>
<p>![替代文本]+(<a href="https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg">https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg</a>)</p>
<h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6 引用"></a>6 引用</h2><blockquote>
<p>这是一个引用。</p>
</blockquote>
<p>（&gt;）+ 引用文本</p>
<h2 id="7-代码"><a href="#7-代码" class="headerlink" title="7.代码"></a>7.代码</h2><p><code>代码</code></p>
<h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h2><table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元</td>
<td>单元</td>
</tr>
<tr>
<td>单元</td>
<td>单元</td>
</tr>
</tbody></table>
<h2 id="9-分割线"><a href="#9-分割线" class="headerlink" title="9.分割线"></a>9.分割线</h2><p>-+-+-</p>
<hr>
<p><strong>或者</strong></p>
<p>’***‘</p>
<hr>
<h2 id="10-任务列表"><a href="#10-任务列表" class="headerlink" title="10 任务列表"></a>10 任务列表</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 已完成项</li>
<li><input disabled="" type="checkbox"> 未完成项</li>
<li><input checked="" disabled="" type="checkbox"> 已完成项</li>
<li><input disabled="" type="checkbox"> 未完成项‘</li>
</ul>
<h2 id="11-内联HTML"><a href="#11-内联HTML" class="headerlink" title="11.内联HTML"></a>11.内联HTML</h2><div>这是一个div块</div>

<p>’<div>这是一个div块</div>‘</p>
]]></content>
      <categories>
        <category>常用</category>
      </categories>
      <tags>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Debain 简单配置FTP</title>
    <url>/2024/10/10/debian-ftp/</url>
    <content><![CDATA[<h1 id="Debian简单配置FTP"><a href="#Debian简单配置FTP" class="headerlink" title="Debian简单配置FTP"></a>Debian简单配置FTP</h1><ul>
<li>apt install ftp vsftpd	# 安装ftp服务</li>
<li>mkdir &#x2F;ftp #创建路径</li>
<li>chmod 777 &#x2F;ftp #给予权限</li>
<li>vi &#x2F;etc&#x2F;vsftpd.conf：修改配置文件</li>
<li><pre><code>    **listen=YES #监听ipv4端口
          listen_ipv6=NO #关闭监听ipv6
          anonymous_enable=NO	#禁止匿名登录
          write_enable=YES #允许上传写入
          local_umask=022 #上传写入权限（反掩）
          local_root=/ftp #登录根路径**
</code></pre>
</li>
</ul>
<h3 id="创建ftp测试用户"><a href="#创建ftp测试用户" class="headerlink" title="创建ftp测试用户"></a>创建ftp测试用户</h3><p>要允许用户访问FTP服务器，我们需要创建一个帐户。打开终端并输入以下命令：</p>
<ul>
<li>adduser ftpuser	# 这将创建一个名为ftpuser的用户。你会被提示输入新用户的密码和其他信息</li>
<li>usermod -a -G ftp ftpuser # 将其添加到FTP用户组中</li>
</ul>
<h2 id="启动FTP服务"><a href="#启动FTP服务" class="headerlink" title="启动FTP服务"></a>启动FTP服务</h2><ul>
<li>systemctl start vsftpd.service	启动vsftp服务</li>
<li>systemctl status vsftpd  #使用命令检查服务状态</li>
</ul>
<h3 id="测试ftp服务器"><a href="#测试ftp服务器" class="headerlink" title="测试ftp服务器"></a>测试ftp服务器</h3><p>现在FTP服务器已经启动，我们可以使用ftp客户端客户端&amp;spm&#x3D;1001.2101.3001.7020)测试它。打开另一个终端窗口并输入以下命令</p>
<ul>
<li><p>ftp localhost		这将连接到运行在本地计算机上的FTP服务器。</p>
</li>
<li><p>put &#x2F;path&#x2F;to&#x2F;local&#x2F;file &#x2F;remote&#x2F;file&#x2F;name   #上传命令</p>
</li>
<li><p>get &#x2F;remote&#x2F;file&#x2F;name &#x2F;path&#x2F;to&#x2F;local&#x2F;file     #下载命令</p>
</li>
<li><p>apt install ftp vsftpd	# 安装ftp服务</p>
</li>
<li><p>mkdir &#x2F;ftp #创建路径</p>
</li>
<li><p>chmod 777 &#x2F;ftp #给予权限</p>
</li>
<li><p>vi &#x2F;etc&#x2F;vsftpd.conf：修改配置文件</p>
</li>
<li><p>​        <strong>listen&#x3D;YES #监听ipv4端口<br>​		listen_ipv6&#x3D;NO #关闭监听ipv6<br>​		anonymous_enable&#x3D;NO	#禁止匿名登录<br>​		write_enable&#x3D;YES #允许上传写入<br>​		local_umask&#x3D;022 #上传写入权限（反掩）<br>​		local_root&#x3D;&#x2F;ftp #登录根路径</strong></p>
</li>
</ul>
<h3 id="创建ftp测试用户-1"><a href="#创建ftp测试用户-1" class="headerlink" title="创建ftp测试用户"></a>创建ftp测试用户</h3><p>要允许用户访问FTP服务器，我们需要创建一个帐户。打开终端并输入以下命令：</p>
<ul>
<li>adduser ftpuser	# 这将创建一个名为ftpuser的用户。你会被提示输入新用户的密码和其他信息</li>
<li>usermod -a -G ftp ftpuser # 将其添加到FTP用户组中</li>
</ul>
<h2 id="启动FTP服务-1"><a href="#启动FTP服务-1" class="headerlink" title="启动FTP服务"></a>启动FTP服务</h2><ul>
<li>systemctl start vsftpd.service	启动vsftp服务</li>
<li>systemctl status vsftpd  #使用命令检查服务状态</li>
</ul>
<h3 id="测试ftp服务器-1"><a href="#测试ftp服务器-1" class="headerlink" title="测试ftp服务器"></a>测试ftp服务器</h3><p>现在FTP服务器已经启动，我们可以使用ftp客户端客户端&amp;spm&#x3D;1001.2101.3001.7020)测试它。打开另一个终端窗口并输入以下命令</p>
<ul>
<li>ftp localhost		这将连接到运行在本地计算机上的FTP服务器。</li>
<li>put &#x2F;path&#x2F;to&#x2F;local&#x2F;file &#x2F;remote&#x2F;file&#x2F;name   #上传命令</li>
<li>get &#x2F;remote&#x2F;file&#x2F;name &#x2F;path&#x2F;to&#x2F;local&#x2F;file     #下载命令</li>
</ul>
]]></content>
      <categories>
        <category>Debain</category>
      </categories>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>docker入门</title>
    <url>/2024/10/10/docker%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="Docker的安装"><a href="#Docker的安装" class="headerlink" title="Docker的安装"></a>Docker的安装</h2><h3 id="部署docker容器虚拟化平台并且配置docker镜像加速地址。"><a href="#部署docker容器虚拟化平台并且配置docker镜像加速地址。" class="headerlink" title="部署docker容器虚拟化平台并且配置docker镜像加速地址。"></a>部署docker容器虚拟化平台并且配置docker镜像加速地址。</h3><p>实验环境：openeuler24.03-LST 64位。网络要求能上外网。</p>
<h3 id="摸鱼去了还没写完！！！"><a href="#摸鱼去了还没写完！！！" class="headerlink" title="摸鱼去了还没写完！！！"></a>摸鱼去了还没写完！！！</h3><p><img src="https://pic2.imge.cc/2024/10/12/670a75e1d1ddb.gif" loading="lazy"></p>
]]></content>
      <categories>
        <category>OpenEuler</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker原理</title>
    <url>/2024/10/09/docker%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="docker原理"><a href="#docker原理" class="headerlink" title="docker原理"></a>docker原理</h1><h2 id="一、Docker背景介绍。"><a href="#一、Docker背景介绍。" class="headerlink" title="一、Docker背景介绍。"></a>一、Docker背景介绍。</h2><h3 id="1、什么是docker。"><a href="#1、什么是docker。" class="headerlink" title="1、什么是docker。"></a>1、什么是docker。</h3><h4 id="Docker，翻译过来就是码头工人"><a href="#Docker，翻译过来就是码头工人" class="headerlink" title="Docker，翻译过来就是码头工人"></a>Docker，翻译过来就是码头工人</h4><p>Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可抑制的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化。容器完全使用沙盒机制，相互之间不会存在任何接口。几乎没有性能开销，可以很容易的在机器和数据中心运行。最重要的是，他们不依赖于任何语言、框架或者包装系统。</p>
<p>小知识：沙盒也叫沙箱（sandbox）。在计算机领域指一种虚拟技术，而且多用于计算机安全技术。安全软件可以让它在沙盒中运行，如果含有恶意行为，则禁止程序的进一步运行，而这不会对系统造成任何危害。</p>
<p>Docker是dotCloud公司开源的一个基于LXC的高级容器引擎，源码托管在Github上，基于go语言并且遵从Apache2.0协议开源。<br>GitHub地址：<a href="https://github.com/moby/moby">https://github.com/moby/moby</a></p>
<p>小知识：LXC为Linux Container的简写。Linux Container 容器是一种内核虚拟化技术，可以提供轻量级的虚拟化，以便隔离进程和资源，而且不需要提供指令解释机制以及全虚拟化的其他复杂性。<br>LXC主要通过Kernel的namespace实现每个用户实例之间的项目隔离，通过cgroup实现对资源的配额和调度。</p>
<p>docker官网：<a href="https://www.docker.com/">https://www.docker.com</a><br>docker中文库:<a href="https://www.docker.org.cn/">https://www.docker.org.cn/</a></p>
<h3 id="2、Docker容器技术与虚拟机的区别。"><a href="#2、Docker容器技术与虚拟机的区别。" class="headerlink" title="2、Docker容器技术与虚拟机的区别。"></a>2、Docker容器技术与虚拟机的区别。</h3><h4 id="docker相较于VM的优点："><a href="#docker相较于VM的优点：" class="headerlink" title="docker相较于VM的优点："></a>docker相较于VM的优点：</h4><p>1、比VM小、快，Docker容器的尺寸减小相比于整个虚拟机大大简化了分布<br>到云和分发时间的开销。Docker启动一个容器实例时间仅仅需要几秒钟。</p>
<p>2、Docker是一个开放的平台，构建、发布和运行分布式应用程序。</p>
<p>3、开发人员不需要关系具体是哪个Linux操作系统</p>
<p>4、Google、微软（azure）、亚马逊、IBM等都支持docker。</p>
<p>5、Docker支持Unix&#x2F;Linux操作系统，也支持Windows和Mac。</p>
<h4 id="Docker局限性："><a href="#Docker局限性：" class="headerlink" title="Docker局限性："></a>Docker局限性：</h4><p>Docker用于应用程序时是最有用的，但并不包含数据。日志、数据库等通常放在Docker容器外。一个容器的镜像通常都很小，不用和存储大量数据，存储可以通过外部挂载等方式使用，比如：NFS、ipsan、MFS等 ，或者docker命令 ，-v映射磁盘分区。<br>总之，docker只用于计算，存储交给别人。</p>
<h3 id="3、通过docker架构图初步了解docker。"><a href="#3、通过docker架构图初步了解docker。" class="headerlink" title="3、通过docker架构图初步了解docker。"></a>3、通过docker架构图初步了解docker。</h3><p>等了解了docker之后，这张图所代表的的内容就很清晰明了，希望大家学完docker之后还能回来看看这张图。这里简单给大家介绍一下docker的工作流程。<br>工作流程：<br>1、启动docker<br>2、下载镜像到本地<br>3、启动docker容器实例<br>提示：大家可以去注册一个dockerhub，之后会详细给大家讲解它的作用（非常重要！连docker hub账号都没有，玩什么docker！）。</p>
<h4 id="Docker核心技术"><a href="#Docker核心技术" class="headerlink" title="Docker核心技术:"></a>Docker核心技术:</h4><p>1、Namespace —&gt; 实现Container的进程、网络、消息、文件系统和主机名的隔离。<br>2、Cgroup —&gt; 实现对资源的配额和调度。<br>注意：Cgroup的配额，可以指定实例使用的CPU个数，内存大小等</p>
<h3 id="4、Docker特性。"><a href="#4、Docker特性。" class="headerlink" title="4、Docker特性。"></a>4、Docker特性。</h3><p>文件系统隔离：每个进程容器运行在一个完全独立的根文件系统里。</p>
<p>资源隔离：系统资源，像CPU和内存等可以分配到不同的容器中，使用cgroup。<br>网络隔离：每个进程容器运行在自己的网路空间，虚拟接口和IP地址。</p>
<p>日志记录：Docker将收集到和记录的每个进程容器的标准流（stdout&#x2F;stderr&#x2F;stdin），用于实时检索或者批量检索</p>
<p>变更管理：容器文件系统的变更可以提交到新的镜像中，并可重复使用以创建更多的容器。无需使用模板或者手动配置。</p>
<p>交互式shell：Docker可以分配一个虚拟终端并且关联到任何容器的标准输出上，例如运行一个一次性交互shell。</p>
]]></content>
      <categories>
        <category>OpenEuler</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/10/01/hello-world/</url>
    <content><![CDATA[<h6 id="Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub"><a href="#Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub" class="headerlink" title="Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub."></a>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</h6><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><h6 id="hexo-new-“My-New-Post”"><a href="#hexo-new-“My-New-Post”" class="headerlink" title="hexo new “My New Post”"></a>hexo new “My New Post”</h6><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><h6 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo server"></a>hexo server</h6><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><h6 id="hexo-generate"><a href="#hexo-generate" class="headerlink" title="hexo generate"></a>hexo generate</h6><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><h6 id="hexo-deploy"><a href="#hexo-deploy" class="headerlink" title="hexo deploy"></a>hexo deploy</h6><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo折腾日记</title>
    <url>/2024/10/01/hexo%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="hexo使用中遇到的问题和解决方法"><a href="#hexo使用中遇到的问题和解决方法" class="headerlink" title="hexo使用中遇到的问题和解决方法"></a>hexo使用中遇到的问题和解决方法</h1>]]></content>
      <categories>
        <category>常用</category>
      </categories>
      <tags>
        <tag>webserver</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx</title>
    <url>/2024/10/10/nginx/</url>
    <content><![CDATA[<h1 id="Nginx-配置问题与解决方法"><a href="#Nginx-配置问题与解决方法" class="headerlink" title="Nginx 配置问题与解决方法"></a>Nginx 配置问题与解决方法</h1><p>Nginx 配置与问题解析</p>
<h1 id="Nginx配置与解析"><a href="#Nginx配置与解析" class="headerlink" title="Nginx配置与解析"></a>Nginx配置与解析</h1><p><code>Nginx</code>默认的配置文件是在安装目录下的 <code>conf</code>目录下，后续对 <code>Nginx</code>的使用基本上都是对此配置文件进行相应的修改。修改过<code>nginx.conf</code>配置文件，记得要重启<code>Nginx</code>服务</p>
<h2 id="安装nginx-基础环境配置"><a href="#安装nginx-基础环境配置" class="headerlink" title="安装nginx (基础环境配置)"></a>安装nginx (基础环境配置)</h2><ul>
<li><p>yum install nginx 	使用yum命令安装</p>
</li>
<li><p>systemctl stop firewalld 实验环境下关闭防火墙与SElniunx策略</p>
</li>
<li><p>setenforce 0</p>
</li>
<li><p>systemctl start nginx	#启动nginx服务</p>
<p>在本地浏览器中输入本机IP地址，显示nginx主界面则为成功</p>
</li>
</ul>
<h2 id="配置个性化web界面"><a href="#配置个性化web界面" class="headerlink" title="配置个性化web界面"></a>配置个性化web界面</h2><h3 id="新建网站首页"><a href="#新建网站首页" class="headerlink" title="新建网站首页"></a>新建网站首页</h3><ul>
<li>echo “this is nginx web server” &gt; &#x2F;var&#x2F;ww&#x2F;html index.html<ul>
<li>vi &#x2F;etc&#x2F;nginx&#x2F;ngin #新建并编辑nginx的配置文件<br>server {<br>　　　　listen 80;	#监听端口<br>       server_name localhost; 	#本机IP或域名<br>  location &#x2F; {<br>  root &#x2F;var&#x2F;www&#x2F;html;		#主目录<br>  index index.html;		<br>  }<br>}</li>
<li>nginx -t      #然后使用命令验证nginx语法正确性<br>tips:尽量不要修改nginx的主配置文件，在&#x2F;cond.d 目录下的文件会被nginx默认识别。</li>
</ul>
</li>
<li>重新通过web界面访问nginx主页</li>
</ul>
<h2 id="配置Nginx反向代理"><a href="#配置Nginx反向代理" class="headerlink" title="配置Nginx反向代理"></a>配置Nginx反向代理</h2><h3 id="实现效果：使用-Nginx-反向代理，访问IP直接跳转到百度主页"><a href="#实现效果：使用-Nginx-反向代理，访问IP直接跳转到百度主页" class="headerlink" title="实现效果：使用 Nginx 反向代理，访问IP直接跳转到百度主页"></a>实现效果：使用 Nginx 反向代理，访问IP直接跳转到百度主页</h3><p><strong>注意</strong>：此处如果要想从指定域名跳转到本机指定的ip，需要修改本机的hosts文件。</p>
<p>配置代码</p>
<p>server {<br>    listen       80;<br>    server_name  虚拟机IP;</p>
<p>location &#x2F; {<br>    proxy_pass  <a href="http://www.baidu.com/">http://www.baidu.com</a><br>}</p>
<p>}</p>
<p>如上配置，Nginx监听 80端口，访问虚拟机IP（不加端口号时默认为 80端口），访问该IP时会跳转到 百度主页上。</p>
<h2 id="配置Nginx负载均衡"><a href="#配置Nginx负载均衡" class="headerlink" title="配置Nginx负载均衡"></a>配置Nginx负载均衡</h2><h3 id="负载均衡的作用"><a href="#负载均衡的作用" class="headerlink" title="负载均衡的作用"></a>负载均衡的作用</h3><p>解决服务器的高并发压力，提高应用程序的处理性能；<br>提供故障转移，实现高可用；<br>通过添加或减少服务器数量，增强网站的可扩展性；<br>在负载均衡器上进行过滤，可以提高系统的安全性。</p>
<h4 id="Nginx负载均衡配置"><a href="#Nginx负载均衡配置" class="headerlink" title="Nginx负载均衡配置"></a>Nginx负载均衡配置</h4><h5 id="代理服务器-配置"><a href="#代理服务器-配置" class="headerlink" title="代理服务器 配置"></a>代理服务器 配置</h5><p>vi &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p>
<p>在Nnginx的主配置文件下的http块中配置</p>
<pre><code># 设置服务器组
upstream backend &#123;
    server localhost;
    server localhost;
&#125;
</code></pre>
<h6 id="在server块下增加配置"><a href="#在server块下增加配置" class="headerlink" title="在server块下增加配置"></a>在server块下增加配置</h6><p>server {<br>        listen 80;<br>        server_name localhost;<br>        location &#x2F; {</p>
<p>​			# backend 就是服务器组的名称</p>
<p>​			proxy_pass <a href="http://backend/">http://backend/</a>;<br>​		}<br>​	}</p>
]]></content>
      <categories>
        <category>OpenEuler</category>
      </categories>
      <tags>
        <tag>webserver</tag>
      </tags>
  </entry>
  <entry>
    <title>openeuler yum源</title>
    <url>/2024/09/27/openeuler-yum/</url>
    <content><![CDATA[<h1 id="网络YUM源配置"><a href="#网络YUM源配置" class="headerlink" title="网络YUM源配置"></a>网络YUM源配置</h1><h2 id="确定操作系统版本"><a href="#确定操作系统版本" class="headerlink" title="确定操作系统版本"></a>确定操作系统版本</h2><p>cat &#x2F;etc&#x2F;os-release</p>
<h2 id="选择yum源版本-配置yum源文件"><a href="#选择yum源版本-配置yum源文件" class="headerlink" title="选择yum源版本 配置yum源文件"></a>选择yum源版本 配置yum源文件</h2><p>cd &#x2F;etc&#x2F;yum.repos.d&#x2F;<br>mv openEuler.repo openEuler.repo.bak  <em>备份原有的配置文件</em><br>vi openEuler.repo  <em>创建或编辑新的配置文件</em></p>
<h2 id="编辑yum源"><a href="#编辑yum源" class="headerlink" title="编辑yum源"></a>编辑yum源</h2><pre><code>[openEuler-everything]
name=openEuler-everything
baseurl=http://repo.huaweicloud.com/openeuler/openEuler-22.03-LTS-SP3/everything/x86_64/
enabled=1
gpgcheck=0
gpgkey=http://repo.huaweicloud.com/openeuler/openEuler-22.03-LTS-SP3/everything/x86_64/RPM-GPG-KEY-openEuler
</code></pre>
<h1 id="本地YUM源配置"><a href="#本地YUM源配置" class="headerlink" title="本地YUM源配置"></a>本地YUM源配置</h1>]]></content>
      <categories>
        <category>OpenEuler</category>
      </categories>
      <tags>
        <tag>openeuler</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Server 域</title>
    <url>/2024/10/12/windons%20server%20%E5%9F%9F/</url>
    <content><![CDATA[<h1 id="Windows-Server-域"><a href="#Windows-Server-域" class="headerlink" title="Windows Server 域"></a>Windows Server 域</h1><h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>​	域是一种网络架构，它允许集中管理用户账户、计算机账户、安全策略、软件部署、组策略和其他资源</p>
<ol>
<li><p><strong>集中管理</strong>：</p>
<p>域允许管理员通过一个集中的位置来管理用户和计算机，而不是在每台计算机上单独进行。</p>
</li>
<li><p><strong>安全控制</strong>：</p>
<p>域提供了一个安全框架，可以实施统一的安全策略，如密码策略、账户锁定策略和访问控制列表（ACLs）。</p>
</li>
<li><p><strong>身份验证</strong>：</p>
<p>域中的用户可以使用单一登录凭证（域凭据）访问域内的所有资源，而无需为每个资源记住不同的用户名和密码。</p>
</li>
<li><p><strong>资源共享</strong>：</p>
<p>域允许用户和应用程序访问网络资源，如文件服务器、打印机和其他应用程序服务。</p>
</li>
<li><p><strong>策略实施</strong>：</p>
<p>通过组策略，管理员可以控制用户和计算机的配置，包括软件安装、桌面设置、安全设置等。</p>
</li>
<li><p><strong>目录服务</strong>：</p>
<p>域使用活动目录（Active Directory）作为其目录服务，它存储有关域内所有对象的信息，如用户、计算机、打印机和共享文件夹。</p>
</li>
<li><p><strong>简化管理</strong>：</p>
<p>域减少了管理任务的复杂性，因为许多任务可以通过自动化脚本来完成，如用户账户的创建和删除。</p>
</li>
<li><p><strong>提高效率</strong>：</p>
<p>域可以提高工作效率，因为用户可以轻松地访问他们需要的资源，而不需要管理员的频繁干预。</p>
</li>
<li><p><strong>可扩展性</strong>：</p>
<p>域结构可以随着组织的成长而扩展，支持从小型网络到大型企业环境。</p>
</li>
<li><p><strong>故障转移和高可用性</strong>：</p>
<p>域控制器可以配置为相互冗余，以确保在硬件故障或其他问题发生时，域服务仍然可用。</p>
</li>
</ol>
<h1 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h1><p>放行ping命令(基础)<br>方法1：关闭防火墙</p>
<p>方法2：入站规则新建规则：放行ping命令（自定义IPv4端口）</p>
<p>网络连接方式设置为桥接模式</p>
<p>使两个网络能够互相ping通</p>
<p>每一个win server系统都需要进行放行ping命令的操作（检查互通）</p>
<p>第一台域控制器DC1配置<br>步骤1：环境准备<br>搭建winserver2019的系统环境</p>
<p>我们首先进行克隆为win-server-2</p>
<p>计算机重命名 DC1</p>
<p>控制面板—系统和安全—系统—高级系统设置—系统属性—计算机名  DC1</p>
<p>步骤2：设置Administrator账户的密码<br>设置—账户设置—PIN密码—设置密码</p>
<p>步骤3：配置网络信息<br>IP地址：  192.168.10.1</p>
<p>DNS地址：192.168.10.1</p>
<p>步骤4：创建第一台域控制器long.om<br>添加角色和功能  —将此服务器升级为域控制器</p>
<p>ps:我们还没有创建其他的域控制器，此处我们选择添加新林</p>
<h3 id="补充：将域服务器降级为成员服务器"><a href="#补充：将域服务器降级为成员服务器" class="headerlink" title="补充：将域服务器降级为成员服务器"></a>补充：将域服务器降级为成员服务器</h3><p>服务器管理器—删除角色和功能</p>
<p>删除功能之前，需要先对域控制器进行降级</p>
<p>重新开机即可操作成功</p>
<p>添加成员服务器MS1<br>步骤1：设置Administrator账户的密码<br>步骤2：配置网络信息<br>IP地址：192.168.10.10</p>
<p>DNS地址：192.168.10.1</p>
<p>同时开启机器：  DC1  long.com（两个网络之间需要互相ping通）</p>
<p>Ipconfig &#x2F;all 查看网络配置信息，ping  DC1 ，观察是否可以ping通</p>
<p>Ping 192.168.10.1，网络之间能够ping通再进行下一步操作</p>
<h3 id="步骤3：在本计算机上运行sysprep"><a href="#步骤3：在本计算机上运行sysprep" class="headerlink" title="步骤3：在本计算机上运行sysprep"></a>步骤3：在本计算机上运行sysprep</h3><p>文件位置: C:\Windows\System32\Sysprep，运行程序，点击通用后直接点击确定</p>
]]></content>
      <categories>
        <category>windonws Server</category>
      </categories>
      <tags>
        <tag>windows web</tag>
      </tags>
  </entry>
  <entry>
    <title>常用命令</title>
    <url>/2024/10/13/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>以下命令均需要安装后使用</p>
<h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><p>用于从命令进行数据传输，支持多种协议（HTTP、HTTPS、FTP等）。</p>
<p>安装</p>
<h6 id="apt-install-curl"><a href="#apt-install-curl" class="headerlink" title="apt install curl"></a><strong>apt install curl</strong></h6><p>GET请求</p>
<h6 id="curl-https-www-example-com"><a href="#curl-https-www-example-com" class="headerlink" title="curl https://www.example.com"></a>curl <a href="https://www.example.com/">https://www.example.com</a></h6><p>POST请求</p>
<h6 id="curl-d-“param1-value1-param2-value2”-https-www-example-com"><a href="#curl-d-“param1-value1-param2-value2”-https-www-example-com" class="headerlink" title="curl -d “param1&#x3D;value1&amp;param2&#x3D;value2” https://www.example.com"></a>curl -d “param1&#x3D;value1&amp;param2&#x3D;value2” <a href="https://www.example.com/">https://www.example.com</a></h6><p>上传文件</p>
<h6 id="curl-F-“file-path-to-file”"><a href="#curl-F-“file-path-to-file”" class="headerlink" title="curl -F “file&#x3D;@path&#x2F;to&#x2F;file”"></a>curl -F “file&#x3D;@path&#x2F;to&#x2F;file”</h6><h6 id="https-www-example-com-upload"><a href="#https-www-example-com-upload" class="headerlink" title="https://www.example.com/upload"></a><a href="https://www.example.com/upload">https://www.example.com/upload</a></h6><h2 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h2><p>用于从网络下载文件，支持 HTTP、HTTPS 和 FTP 协议。</p>
<p>安装</p>
<h6 id="apt-install-wget"><a href="#apt-install-wget" class="headerlink" title="apt install wget"></a>apt install wget</h6><p>下载文件</p>
<h6 id="wget-http-example-com-file-txt"><a href="#wget-http-example-com-file-txt" class="headerlink" title="wget http://example.com/file.txt"></a>wget <a href="http://example.com/file.txt">http://example.com/file.txt</a></h6><p>断点续传</p>
<h6 id="wget-c-http-example-com-largefile-zip"><a href="#wget-c-http-example-com-largefile-zip" class="headerlink" title="wget -c http://example.com/largefile.zip"></a>wget -c <a href="http://example.com/largefile.zip">http://example.com/largefile.zip</a></h6><h2 id="lynx"><a href="#lynx" class="headerlink" title="lynx"></a>lynx</h2><p>基于文本的浏览器</p>
<p>安装</p>
<p>apt install lynx</p>
<p>打开网页</p>
<p>lynx <a href="https://www.example.com/">https://www.example.com</a>	<br>#箭头导航，回车确认</p>
<h2 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h2><p>查询DNS记录</p>
<p>查询域名</p>
<p>nslookup exampe.com</p>
<p>指定DNS服务器</p>
<p>nslookup example.com 8.8.8.8</p>
<h2 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h2><p>查询dns信息</p>
<p>基本查询</p>
<p>dig example.com</p>
<p>查询特定记录类型</p>
<p>dig example.com A</p>
<h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><p>文件传输协议，用于在客户端和服务器之间传输文件</p>
<p>链接FTP服务器</p>
<p>ftp ftp.example.com</p>
<p>上传文件</p>
<p>put localfile.txt</p>
<p>下载文件</p>
<p>get remotefile.txt</p>
<h2 id="lftp"><a href="#lftp" class="headerlink" title="lftp"></a>lftp</h2><p>功能强大的命令行文件传输工具，支持多种协议如 FTP、SFTP、HTTP 等</p>
<p>连接到服务器</p>
<p>lftp <a href="ftp://username:password@hostname/">ftp://username:password@hostname</a></p>
<p>上传文件</p>
<p>put localfile.txt</p>
<p>下载文件</p>
<p>get remotefile.txt</p>
<h2 id="showmount"><a href="#showmount" class="headerlink" title="showmount"></a>showmount</h2><p>显示 NFS 服务器的共享信息。</p>
<p>显示共享目录</p>
<p>showmount -e 192.168.1.1</p>
<h3 id="smbclient"><a href="#smbclient" class="headerlink" title="smbclient"></a>smbclient</h3><p>访问 SMB&#x2F;CIFS 资源，类似于 FTP 客户端。</p>
<p>连接到共享</p>
<p>smbclient &#x2F;&#x2F;server&#x2F;share -U username</p>
<p>上传文件</p>
<p>put localfile.txt</p>
<p>下载文件</p>
<p>get remotefile.txt</p>
<h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><p>安全登录、命令执行和数据传输。</p>
<p>远程登录</p>
<p>ssh username@hostname</p>
<p>使用密钥登录</p>
<p>ssh -i &#x2F;path&#x2F;to&#x2F;private_key username@hostname</p>
<h3 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h3><p>远程登录和网络测试。</p>
<p>连接到服务器</p>
<p>telnet 192.168.1.1 23</p>
<h3 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h3><p>跟踪网络中数据包的传输路径。</p>
<p>跟踪路径</p>
<p>traceroute example.com</p>
<h2 id="ntpdate"><a href="#ntpdate" class="headerlink" title="ntpdate"></a>ntpdate</h2><p>手动同步计算机时间与远程 NTP 服务器时间。</p>
<p>同步时间</p>
<p>ntpdate time.ntp.org</p>
<h2 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h2><p>列出系统中打开的文件‘</p>
<p>查看所有打开的文件</p>
<p>lsof</p>
<p>查看特定进程的文件</p>
<p>lsof -p <PID></p>
<h2 id="namp"><a href="#namp" class="headerlink" title="namp"></a>namp</h2><p>网络发现和安全审计</p>
<p>基本扫描</p>
<p>nmap example.com</p>
<p>扫描特定端口</p>
<p>nmap -p 80 example.com</p>
<h2 id="mail"><a href="#mail" class="headerlink" title="mail"></a>mail</h2><p>发送和接受邮件</p>
<p>发送邮件</p>
<p>echo “邮件内容” | mail -s “主题” 收件人</p>
<p>读取新邮件</p>
<p>mail</p>
<h2 id="host"><a href="#host" class="headerlink" title="host"></a>host</h2><p>查询DNS信息</p>
<p>查询域名</p>
<p>host example.com</p>
<p>查询IP地址</p>
<p>host 8.8.8.8</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>常用网址</title>
    <url>/2024/10/12/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80/</url>
    <content><![CDATA[<h3 id="kimi-AI-https-kimi-moonshot-cn"><a href="#kimi-AI-https-kimi-moonshot-cn" class="headerlink" title="kimi AI https://kimi.moonshot.cn/"></a>kimi AI <a href="https://kimi.moonshot.cn/">https://kimi.moonshot.cn/</a></h3><h3 id="免费图床-https-imge-cc"><a href="#免费图床-https-imge-cc" class="headerlink" title="免费图床    https://imge.cc/"></a>免费图床    <a href="https://imge.cc/">https://imge.cc/</a></h3><h3 id="红队命令合集-https-book-shentoushi-top"><a href="#红队命令合集-https-book-shentoushi-top" class="headerlink" title="红队命令合集    https://book.shentoushi.top/"></a>红队命令合集    <a href="https://book.shentoushi.top/">https://book.shentoushi.top/</a></h3><h3 id="P站国内镜像-https-www-vilipix-com"><a href="#P站国内镜像-https-www-vilipix-com" class="headerlink" title="P站国内镜像    https://www.vilipix.com/"></a>P站国内镜像    <a href="https://www.vilipix.com/">https://www.vilipix.com/</a></h3><h3 id="ZEABUR部署服务-https-dash-zeabur-com-projects"><a href="#ZEABUR部署服务-https-dash-zeabur-com-projects" class="headerlink" title="ZEABUR部署服务  https://dash.zeabur.com/projects"></a>ZEABUR部署服务  <a href="https://dash.zeabur.com/projects">https://dash.zeabur.com/projects</a></h3><p><img src="https://pic2.imge.cc/2024/10/12/670a96236fe56.png" loading="lazy"></p>
]]></content>
      <categories>
        <category>常用</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2024/09/17/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>这是一篇测试，用来git仓库是否成功同步</p>
<p><img src="https://pic2.imge.cc/2024/10/12/670a03ad6a397.jpg" loading="lazy"></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>网安知识点</title>
    <url>/2024/10/12/%E7%BD%91%E5%AE%89/</url>
    <content><![CDATA[<h1 id="网安"><a href="#网安" class="headerlink" title="网安"></a>网安</h1><h2 id="模块一基础设施设置与安全加固"><a href="#模块一基础设施设置与安全加固" class="headerlink" title="模块一	基础设施设置与安全加固"></a>模块一	基础设施设置与安全加固</h2><h3 id="试题简述"><a href="#试题简述" class="headerlink" title="试题简述"></a>试题简述</h3><p>​	选手需要使用各种网络安全技术对已有的网络和服务进行配置和加固。模块A的任务场景中的一些安全配置比较明确，但另外一些安全配置则为不同的实现选项预留了选择空间，选手需根据行业最佳实践（在安全性、高可用性和可扩展性方面）选择合理安全方案，并尽最大努力实现安全配置。选手应该熟悉Windows、Linux等主流的网络安全设备和产品的安全配置和加固技术</p>
<h4 id="1-网络基础："><a href="#1-网络基础：" class="headerlink" title="1.网络基础："></a>1.<strong>网络基础</strong>：</h4><ul>
<li>理解TCP&#x2F;IP协议栈</li>
<li>熟悉OSI模型</li>
<li>掌握常见的网络设备（如路由器、交换机、防火墙）的工作原理</li>
</ul>
<h4 id="2-操作系统安全："><a href="#2-操作系统安全：" class="headerlink" title="2.操作系统安全："></a>2.<strong>操作系统安全</strong>：</h4><ul>
<li>熟悉Windows和Linux操作系统的安全配置</li>
<li>了解如何加固操作系统，包括账户管理、权限控制、安全策略等</li>
<li>启用账户锁定策略，防止暴力破解，</li>
<li>仅授权必要的用户和组进行关键操作，如远程关机和本地关机。</li>
<li>限制对敏感资源的访问，确保只有授权用户可以访问</li>
<li>增大日志文件大小，确保记录足够的日志信息以便于事后审计。</li>
<li>开启关键事件的审核，如账户登录事件、权限更改、系统访问等优化网络服务，关闭不必要的网络共享。</li>
<li>限制网络访问，仅允许特定的IP地址或范围访问关键服务</li>
</ul>
<h4 id="3-网络安全设备和产品："><a href="#3-网络安全设备和产品：" class="headerlink" title="3.网络安全设备和产品："></a>3.<strong>网络安全设备和产品</strong>：</h4><ul>
<li>了解不同网络安全设备的功能和配置，如防火墙、入侵检测系统（IDS）、入侵防御系统（IPS）、VPN等</li>
<li>掌握如何配置和维护这些设备</li>
</ul>
<h4 id="4-安全协议和服务："><a href="#4-安全协议和服务：" class="headerlink" title="4.安全协议和服务："></a>4.<strong>安全协议和服务</strong>：</h4><ul>
<li>熟悉常见的安全协议，如SSH、HTTPS、SFTP等</li>
<li>了解如何配置和维护这些服务</li>
</ul>
<h4 id="5-安全监控和日志分析："><a href="#5-安全监控和日志分析：" class="headerlink" title="5.安全监控和日志分析："></a>5.<strong>安全监控和日志分析</strong>：</h4><ul>
<li>掌握如何设置和分析安全日志</li>
</ul>
<h4 id="日志防火墙组策略就盯着这三干！"><a href="#日志防火墙组策略就盯着这三干！" class="headerlink" title="日志防火墙组策略就盯着这三干！"></a>日志防火墙组策略就盯着这三干！</h4><h2 id="模块二应急响应-数字取证应用安全"><a href="#模块二应急响应-数字取证应用安全" class="headerlink" title="模块二	应急响应 数字取证应用安全"></a>模块二	应急响应 数字取证应用安全</h2><ol>
<li><p><strong>网络安全事件响应</strong>：</p>
<ul>
<li>学习网络安全事件的分类和识别方法。</li>
<li>掌握应急响应流程，包括事件的识别、响应、隔离、恢复和报告。</li>
</ul>
</li>
<li><p><strong>应用程序安全</strong>：</p>
<ul>
<li>学习编程语言和Web应用的安全漏洞，如SQL注入、XSS等。</li>
<li>掌握代码审计工具和技术，如静态代码分析（SAST）和动态代码分析（DAST）。</li>
<li>有东西就往D盾扫一扫</li>
</ul>
</li>
<li><p><strong>工具和资源库</strong></p>
<h5 id="常用的工具"><a href="#常用的工具" class="headerlink" title="常用的工具"></a>常用的工具</h5><h5 id="WiresharkD盾火绒剑"><a href="#WiresharkD盾火绒剑" class="headerlink" title="Wireshark	D盾	火绒剑"></a><strong>Wireshark</strong>	D盾	火绒剑</h5><p><a href="https://www.t00ls.com/">https://www.t00ls.com/</a>	tools</p>
<p><a href="https://play.picoctf.org/">https://play.picoctf.org/</a>	ctf平台</p>
</li>
</ol>
<h2 id="模块三CTF夺旗"><a href="#模块三CTF夺旗" class="headerlink" title="模块三	CTF夺旗"></a>模块三	CTF夺旗</h2><p><strong>编程和脚本语言</strong>：</p>
<ul>
<li>学习至少一种编程语言，如Python、C、C++或Java，这将帮助你理解漏洞利用和编写自动化工具。</li>
<li>学习脚本语言，如Bash或PowerShell，以便在不同操作系统中操作</li>
</ul>
<p><strong>网络安全基础</strong>：</p>
<ul>
<li>理解网络安全的基本概念，包括加密、身份验证、访问控制等</li>
</ul>
<p><strong>系统和网络</strong>：</p>
<ul>
<li>掌握Windows和Linux操作系统的安全性。</li>
<li>了解网络协议和架构，如TCP&#x2F;IP、DNS、HTTP、HTTPS等</li>
</ul>
<p><strong>逆向工程</strong>：（不用学）</p>
<ul>
<li>学习如何分析和修改二进制文件，掌握逆向工程的基本概念和工具。</li>
</ul>
<p><strong>安全工具和资源</strong>：</p>
<ul>
<li><p>熟悉常用的安全工具，如Wireshark（网络分析）、John the Ripper（密码破解）、Nmap（网络扫描）等。</p>
</li>
<li><p>学习CTF比赛的特定技能，如代码审计、二进制漏洞利用、Web应用攻击、密码破译等。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>网安</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenEulerSeliinux与防火墙</title>
    <url>/2024/09/17/%E9%98%B2%E7%81%AB%E5%A2%99/</url>
    <content><![CDATA[<h1 id="SELinux与防火墙配置"><a href="#SELinux与防火墙配置" class="headerlink" title="SELinux与防火墙配置"></a>SELinux与防火墙配置</h1><h2 id="查看SElinnux状态"><a href="#查看SElinnux状态" class="headerlink" title="查看SElinnux状态"></a>查看SElinnux状态</h2><h3 id="getenforce"><a href="#getenforce" class="headerlink" title="getenforce"></a>getenforce</h3><h2 id="临时更改SELinux模式"><a href="#临时更改SELinux模式" class="headerlink" title="临时更改SELinux模式"></a>临时更改SELinux模式</h2><h3 id="setenforce-0"><a href="#setenforce-0" class="headerlink" title="setenforce 0"></a>setenforce 0</h3><h2 id="semanage-安装（用于管理和配置SELinux策略）"><a href="#semanage-安装（用于管理和配置SELinux策略）" class="headerlink" title="semanage 安装（用于管理和配置SELinux策略）"></a>semanage 安装（用于管理和配置SELinux策略）</h2><h3 id="yum-install-policycoreutils-python-utils"><a href="#yum-install-policycoreutils-python-utils" class="headerlink" title="yum install policycoreutils-python-utils"></a>yum install policycoreutils-python-utils</h3><h2 id="查看所有开放端口"><a href="#查看所有开放端口" class="headerlink" title="查看所有开放端口"></a>查看所有开放端口</h2><h3 id="semanage-port-l"><a href="#semanage-port-l" class="headerlink" title="semanage port -l"></a>semanage port -l</h3><h2 id="查看特定端口是否开放（例如查看端口5000）"><a href="#查看特定端口是否开放（例如查看端口5000）" class="headerlink" title="查看特定端口是否开放（例如查看端口5000）"></a>查看特定端口是否开放（例如查看端口5000）</h2><h3 id="semanage-port-l-grep-5000"><a href="#semanage-port-l-grep-5000" class="headerlink" title="semanage port -l | grep 5000"></a>semanage port -l | grep 5000</h3><h2 id="查看针对特定服务（如http）开放的端口"><a href="#查看针对特定服务（如http）开放的端口" class="headerlink" title="查看针对特定服务（如http）开放的端口"></a>查看针对特定服务（如http）开放的端口</h2><h3 id="semanage-port-l-grep-http-port-t"><a href="#semanage-port-l-grep-http-port-t" class="headerlink" title="semanage port -l | grep http_port_t"></a>semanage port -l | grep http_port_t</h3><h2 id="添加端口（例如开放5002端口给http服务）"><a href="#添加端口（例如开放5002端口给http服务）" class="headerlink" title="添加端口（例如开放5002端口给http服务）"></a>添加端口（例如开放5002端口给http服务）</h2><h3 id="semanage-port-a-t-http-port-t-p-tcp-5502"><a href="#semanage-port-a-t-http-port-t-p-tcp-5502" class="headerlink" title="semanage port -a -t http_port_t -p tcp 5502"></a>semanage port -a -t http_port_t -p tcp 5502</h3><h2 id="删除端口（例如关闭http服务的5002端口）"><a href="#删除端口（例如关闭http服务的5002端口）" class="headerlink" title="删除端口（例如关闭http服务的5002端口）"></a>删除端口（例如关闭http服务的5002端口）</h2><h3 id="semanage-port-a-t-http-port-t-p-tcp-5502-1"><a href="#semanage-port-a-t-http-port-t-p-tcp-5502-1" class="headerlink" title="semanage port -a -t http_port_t -p tcp 5502"></a>semanage port -a -t http_port_t -p tcp 5502</h3><h1 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h1><h2 id="启动-停止-防火墙服务"><a href="#启动-停止-防火墙服务" class="headerlink" title="启动&#x2F;停止 防火墙服务"></a>启动&#x2F;停止 防火墙服务</h2><h3 id="systemctl-start-stop-firewalld"><a href="#systemctl-start-stop-firewalld" class="headerlink" title="systemctl start&#x2F;stop firewalld"></a>systemctl start&#x2F;stop firewalld</h3><h2 id="查看防火墙服务状态"><a href="#查看防火墙服务状态" class="headerlink" title="查看防火墙服务状态"></a>查看防火墙服务状态</h2><h3 id="systemctl-status-firewalld"><a href="#systemctl-status-firewalld" class="headerlink" title="systemctl status firewalld"></a>systemctl status firewalld</h3><h2 id="启用-禁用防火墙服务开机自启"><a href="#启用-禁用防火墙服务开机自启" class="headerlink" title="启用&#x2F;禁用防火墙服务开机自启"></a>启用&#x2F;禁用防火墙服务开机自启</h2><h3 id="systemctl-enable-disable-firewalld"><a href="#systemctl-enable-disable-firewalld" class="headerlink" title="systemctl enable&#x2F;disable firewalld"></a>systemctl enable&#x2F;disable firewalld</h3><h2 id="添加-删除端口到防火墙规则"><a href="#添加-删除端口到防火墙规则" class="headerlink" title="添加&#x2F;删除端口到防火墙规则"></a>添加&#x2F;删除端口到防火墙规则</h2><h3 id="firewall-cmd-–permanent-–add-remove-port-80-tcp"><a href="#firewall-cmd-–permanent-–add-remove-port-80-tcp" class="headerlink" title="firewall-cmd –permanent –add&#x2F;remove-port&#x3D;80&#x2F;tcp"></a>firewall-cmd –permanent –add&#x2F;remove-port&#x3D;80&#x2F;tcp</h3><h2 id="重新加载防火墙规则"><a href="#重新加载防火墙规则" class="headerlink" title="重新加载防火墙规则"></a>重新加载防火墙规则</h2><h3 id="firewall-cmd-–reload"><a href="#firewall-cmd-–reload" class="headerlink" title="firewall-cmd –reload"></a>firewall-cmd –reload</h3><h2 id="查看当前防火墙规则"><a href="#查看当前防火墙规则" class="headerlink" title="查看当前防火墙规则"></a>查看当前防火墙规则</h2><h3 id="firewall-cmd-–list-all"><a href="#firewall-cmd-–list-all" class="headerlink" title="firewall-cmd –list-all"></a>firewall-cmd –list-all</h3><h2 id="允许-阻止特定服务通过防火墙"><a href="#允许-阻止特定服务通过防火墙" class="headerlink" title="允许&#x2F;阻止特定服务通过防火墙"></a>允许&#x2F;阻止特定服务通过防火墙</h2><h3 id="firewall-cmd-–permanent-–add-remove-service-http"><a href="#firewall-cmd-–permanent-–add-remove-service-http" class="headerlink" title="firewall-cmd –permanent –add&#x2F;remove-service&#x3D;http"></a>firewall-cmd –permanent –add&#x2F;remove-service&#x3D;http</h3><h2 id="查看防火墙日志"><a href="#查看防火墙日志" class="headerlink" title="查看防火墙日志"></a>查看防火墙日志</h2><h3 id="journalctl-u-firewalld"><a href="#journalctl-u-firewalld" class="headerlink" title="journalctl -u firewalld"></a>journalctl -u firewalld</h3>]]></content>
      <categories>
        <category>OpenEuler</category>
      </categories>
      <tags>
        <tag>openeuler</tag>
      </tags>
  </entry>
</search>
